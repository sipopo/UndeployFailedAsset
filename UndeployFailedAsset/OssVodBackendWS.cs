//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace vodBackendWS {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OssVodBackendWSSoap", Namespace="Microsoft.TV2.Oss.Vod")]
    public partial class OssVodBackendWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataSourceRegistrationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterHeadendOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnregisterHeadendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBackendAssetStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeployableBackendAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadAutoDeployableAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadAutoDeployableAssetsV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadAssetsMarkedForDeletionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeployableBackendAssetsLikeAssetNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeployableBackendAssetsLikeAssetIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeployableBackendAssetsLikeProviderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetValidationCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidationCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImportRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveImportRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveImportRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImportRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentImportRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IngestAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReimportAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReimportMetadataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImportStatusInformationByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsVODCreatorStationReadyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssetMetadataFromBackendOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAssetMetadataInBackendOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAssetFromBackendOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAssetFromBackendAndBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadDRMConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDRMConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssetKeyInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssetMediaInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetServiceConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidationRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetValidationRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMediaProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreImportConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPreImportConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImportConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetImportConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOtherConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOtherConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidationConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetValidationConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUpdateConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImportStatusInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImportableAssetInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssetStatusSortedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeployableAssetsOperationCompleted;
        
        /// <remarks/>
        public OssVodBackendWS() {
            this.Url = "http://78.107.199.162/ossVodBackendWS/Backend.asmx";
        }
        
        /// <remarks/>
        public event GetDataSourceRegistrationInfoCompletedEventHandler GetDataSourceRegistrationInfoCompleted;
        
        /// <remarks/>
        public event RegisterHeadendCompletedEventHandler RegisterHeadendCompleted;
        
        /// <remarks/>
        public event UnregisterHeadendCompletedEventHandler UnregisterHeadendCompleted;
        
        /// <remarks/>
        public event GetBackendAssetStatusCompletedEventHandler GetBackendAssetStatusCompleted;
        
        /// <remarks/>
        public event GetDeployableBackendAssetsCompletedEventHandler GetDeployableBackendAssetsCompleted;
        
        /// <remarks/>
        public event ReadAutoDeployableAssetsCompletedEventHandler ReadAutoDeployableAssetsCompleted;
        
        /// <remarks/>
        public event ReadAutoDeployableAssetsV2CompletedEventHandler ReadAutoDeployableAssetsV2Completed;
        
        /// <remarks/>
        public event ReadAssetsMarkedForDeletionCompletedEventHandler ReadAssetsMarkedForDeletionCompleted;
        
        /// <remarks/>
        public event GetDeployableBackendAssetsLikeAssetNameCompletedEventHandler GetDeployableBackendAssetsLikeAssetNameCompleted;
        
        /// <remarks/>
        public event GetDeployableBackendAssetsLikeAssetIDCompletedEventHandler GetDeployableBackendAssetsLikeAssetIDCompleted;
        
        /// <remarks/>
        public event GetDeployableBackendAssetsLikeProviderIDCompletedEventHandler GetDeployableBackendAssetsLikeProviderIDCompleted;
        
        /// <remarks/>
        public event SetValidationCategoriesCompletedEventHandler SetValidationCategoriesCompleted;
        
        /// <remarks/>
        public event GetValidationCategoriesCompletedEventHandler GetValidationCategoriesCompleted;
        
        /// <remarks/>
        public event DeleteImportRuleCompletedEventHandler DeleteImportRuleCompleted;
        
        /// <remarks/>
        public event MoveImportRulesCompletedEventHandler MoveImportRulesCompleted;
        
        /// <remarks/>
        public event SaveImportRuleCompletedEventHandler SaveImportRuleCompleted;
        
        /// <remarks/>
        public event GetImportRuleCompletedEventHandler GetImportRuleCompleted;
        
        /// <remarks/>
        public event GetCurrentImportRulesCompletedEventHandler GetCurrentImportRulesCompleted;
        
        /// <remarks/>
        public event IngestAssetCompletedEventHandler IngestAssetCompleted;
        
        /// <remarks/>
        public event ImportAssetsCompletedEventHandler ImportAssetsCompleted;
        
        /// <remarks/>
        public event ReimportAllCompletedEventHandler ReimportAllCompleted;
        
        /// <remarks/>
        public event ReimportMetadataCompletedEventHandler ReimportMetadataCompleted;
        
        /// <remarks/>
        public event GetImportStatusInformationByIdCompletedEventHandler GetImportStatusInformationByIdCompleted;
        
        /// <remarks/>
        public event IsVODCreatorStationReadyCompletedEventHandler IsVODCreatorStationReadyCompleted;
        
        /// <remarks/>
        public event GetAssetMetadataFromBackendCompletedEventHandler GetAssetMetadataFromBackendCompleted;
        
        /// <remarks/>
        public event SaveAssetMetadataInBackendCompletedEventHandler SaveAssetMetadataInBackendCompleted;
        
        /// <remarks/>
        public event DeleteAssetFromBackendCompletedEventHandler DeleteAssetFromBackendCompleted;
        
        /// <remarks/>
        public event DeleteAssetFromBackendAndBranchCompletedEventHandler DeleteAssetFromBackendAndBranchCompleted;
        
        /// <remarks/>
        public event RemoveAssetCompletedEventHandler RemoveAssetCompleted;
        
        /// <remarks/>
        public event ReadDRMConfigurationCompletedEventHandler ReadDRMConfigurationCompleted;
        
        /// <remarks/>
        public event UpdateDRMConfigurationCompletedEventHandler UpdateDRMConfigurationCompleted;
        
        /// <remarks/>
        public event GetAssetKeyInfoCompletedEventHandler GetAssetKeyInfoCompleted;
        
        /// <remarks/>
        public event GetAssetMediaInfoCompletedEventHandler GetAssetMediaInfoCompleted;
        
        /// <remarks/>
        public event GetServiceConfigurationCompletedEventHandler GetServiceConfigurationCompleted;
        
        /// <remarks/>
        public event SetServiceConfigurationCompletedEventHandler SetServiceConfigurationCompleted;
        
        /// <remarks/>
        public event GetValidationRulesCompletedEventHandler GetValidationRulesCompleted;
        
        /// <remarks/>
        public event SetValidationRulesCompletedEventHandler SetValidationRulesCompleted;
        
        /// <remarks/>
        public event GetMediaProfilesCompletedEventHandler GetMediaProfilesCompleted;
        
        /// <remarks/>
        public event SetMediaProfilesCompletedEventHandler SetMediaProfilesCompleted;
        
        /// <remarks/>
        public event GetPreImportConfigurationCompletedEventHandler GetPreImportConfigurationCompleted;
        
        /// <remarks/>
        public event SetPreImportConfigurationCompletedEventHandler SetPreImportConfigurationCompleted;
        
        /// <remarks/>
        public event GetImportConfigurationCompletedEventHandler GetImportConfigurationCompleted;
        
        /// <remarks/>
        public event SetImportConfigurationCompletedEventHandler SetImportConfigurationCompleted;
        
        /// <remarks/>
        public event GetOtherConfigurationCompletedEventHandler GetOtherConfigurationCompleted;
        
        /// <remarks/>
        public event SetOtherConfigurationCompletedEventHandler SetOtherConfigurationCompleted;
        
        /// <remarks/>
        public event GetValidationConfigurationCompletedEventHandler GetValidationConfigurationCompleted;
        
        /// <remarks/>
        public event SetValidationConfigurationCompletedEventHandler SetValidationConfigurationCompleted;
        
        /// <remarks/>
        public event GetConfigurationCompletedEventHandler GetConfigurationCompleted;
        
        /// <remarks/>
        public event AddUpdateConfigurationCompletedEventHandler AddUpdateConfigurationCompleted;
        
        /// <remarks/>
        public event GetImportStatusInformationCompletedEventHandler GetImportStatusInformationCompleted;
        
        /// <remarks/>
        public event GetImportableAssetInformationCompletedEventHandler GetImportableAssetInformationCompleted;
        
        /// <remarks/>
        public event GetAssetStatusSortedCompletedEventHandler GetAssetStatusSortedCompleted;
        
        /// <remarks/>
        public event GetDeployableAssetsCompletedEventHandler GetDeployableAssetsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetDataSourceRegistrationInfo", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSourceRegistrationInfo GetDataSourceRegistrationInfo() {
            object[] results = this.Invoke("GetDataSourceRegistrationInfo", new object[0]);
            return ((DataSourceRegistrationInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDataSourceRegistrationInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDataSourceRegistrationInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSourceRegistrationInfo EndGetDataSourceRegistrationInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSourceRegistrationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataSourceRegistrationInfoAsync() {
            this.GetDataSourceRegistrationInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetDataSourceRegistrationInfoAsync(object userState) {
            if ((this.GetDataSourceRegistrationInfoOperationCompleted == null)) {
                this.GetDataSourceRegistrationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataSourceRegistrationInfoOperationCompleted);
            }
            this.InvokeAsync("GetDataSourceRegistrationInfo", new object[0], this.GetDataSourceRegistrationInfoOperationCompleted, userState);
        }
        
        private void OnGetDataSourceRegistrationInfoOperationCompleted(object arg) {
            if ((this.GetDataSourceRegistrationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataSourceRegistrationInfoCompleted(this, new GetDataSourceRegistrationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse RegisterHeadend(string headendName) {
            object[] results = this.Invoke("RegisterHeadend", new object[] {
                        headendName});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegisterHeadend(string headendName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RegisterHeadend", new object[] {
                        headendName}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndRegisterHeadend(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterHeadendAsync(string headendName) {
            this.RegisterHeadendAsync(headendName, null);
        }
        
        /// <remarks/>
        public void RegisterHeadendAsync(string headendName, object userState) {
            if ((this.RegisterHeadendOperationCompleted == null)) {
                this.RegisterHeadendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterHeadendOperationCompleted);
            }
            this.InvokeAsync("RegisterHeadend", new object[] {
                        headendName}, this.RegisterHeadendOperationCompleted, userState);
        }
        
        private void OnRegisterHeadendOperationCompleted(object arg) {
            if ((this.RegisterHeadendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterHeadendCompleted(this, new RegisterHeadendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse UnregisterHeadend(string headendMachine) {
            object[] results = this.Invoke("UnregisterHeadend", new object[] {
                        headendMachine});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnregisterHeadend(string headendMachine, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnregisterHeadend", new object[] {
                        headendMachine}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndUnregisterHeadend(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UnregisterHeadendAsync(string headendMachine) {
            this.UnregisterHeadendAsync(headendMachine, null);
        }
        
        /// <remarks/>
        public void UnregisterHeadendAsync(string headendMachine, object userState) {
            if ((this.UnregisterHeadendOperationCompleted == null)) {
                this.UnregisterHeadendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnregisterHeadendOperationCompleted);
            }
            this.InvokeAsync("UnregisterHeadend", new object[] {
                        headendMachine}, this.UnregisterHeadendOperationCompleted, userState);
        }
        
        private void OnUnregisterHeadendOperationCompleted(object arg) {
            if ((this.UnregisterHeadendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnregisterHeadendCompleted(this, new UnregisterHeadendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInformation[] GetBackendAssetStatus(bool includeExpiredAssets, bool filterByStatus, AssetStatus filterStatus, long startIndex, out long nextIndex) {
            object[] results = this.Invoke("GetBackendAssetStatus", new object[] {
                        includeExpiredAssets,
                        filterByStatus,
                        filterStatus,
                        startIndex});
            nextIndex = ((long)(results[1]));
            return ((StatusInformation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBackendAssetStatus(bool includeExpiredAssets, bool filterByStatus, AssetStatus filterStatus, long startIndex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBackendAssetStatus", new object[] {
                        includeExpiredAssets,
                        filterByStatus,
                        filterStatus,
                        startIndex}, callback, asyncState);
        }
        
        /// <remarks/>
        public StatusInformation[] EndGetBackendAssetStatus(System.IAsyncResult asyncResult, out long nextIndex) {
            object[] results = this.EndInvoke(asyncResult);
            nextIndex = ((long)(results[1]));
            return ((StatusInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBackendAssetStatusAsync(bool includeExpiredAssets, bool filterByStatus, AssetStatus filterStatus, long startIndex) {
            this.GetBackendAssetStatusAsync(includeExpiredAssets, filterByStatus, filterStatus, startIndex, null);
        }
        
        /// <remarks/>
        public void GetBackendAssetStatusAsync(bool includeExpiredAssets, bool filterByStatus, AssetStatus filterStatus, long startIndex, object userState) {
            if ((this.GetBackendAssetStatusOperationCompleted == null)) {
                this.GetBackendAssetStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBackendAssetStatusOperationCompleted);
            }
            this.InvokeAsync("GetBackendAssetStatus", new object[] {
                        includeExpiredAssets,
                        filterByStatus,
                        filterStatus,
                        startIndex}, this.GetBackendAssetStatusOperationCompleted, userState);
        }
        
        private void OnGetBackendAssetStatusOperationCompleted(object arg) {
            if ((this.GetBackendAssetStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBackendAssetStatusCompleted(this, new GetBackendAssetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeployInformationEx[] GetDeployableBackendAssets(string filterName, string filterValue, long startIndex, out long nextIndex) {
            object[] results = this.Invoke("GetDeployableBackendAssets", new object[] {
                        filterName,
                        filterValue,
                        startIndex});
            nextIndex = ((long)(results[1]));
            return ((DeployInformationEx[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeployableBackendAssets(string filterName, string filterValue, long startIndex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeployableBackendAssets", new object[] {
                        filterName,
                        filterValue,
                        startIndex}, callback, asyncState);
        }
        
        /// <remarks/>
        public DeployInformationEx[] EndGetDeployableBackendAssets(System.IAsyncResult asyncResult, out long nextIndex) {
            object[] results = this.EndInvoke(asyncResult);
            nextIndex = ((long)(results[1]));
            return ((DeployInformationEx[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeployableBackendAssetsAsync(string filterName, string filterValue, long startIndex) {
            this.GetDeployableBackendAssetsAsync(filterName, filterValue, startIndex, null);
        }
        
        /// <remarks/>
        public void GetDeployableBackendAssetsAsync(string filterName, string filterValue, long startIndex, object userState) {
            if ((this.GetDeployableBackendAssetsOperationCompleted == null)) {
                this.GetDeployableBackendAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeployableBackendAssetsOperationCompleted);
            }
            this.InvokeAsync("GetDeployableBackendAssets", new object[] {
                        filterName,
                        filterValue,
                        startIndex}, this.GetDeployableBackendAssetsOperationCompleted, userState);
        }
        
        private void OnGetDeployableBackendAssetsOperationCompleted(object arg) {
            if ((this.GetDeployableBackendAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeployableBackendAssetsCompleted(this, new GetDeployableBackendAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/ReadAutoDeployableAssets", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeployInformation[] ReadAutoDeployableAssets(System.DateTime timestampGreaterThan) {
            object[] results = this.Invoke("ReadAutoDeployableAssets", new object[] {
                        timestampGreaterThan});
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReadAutoDeployableAssets(System.DateTime timestampGreaterThan, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReadAutoDeployableAssets", new object[] {
                        timestampGreaterThan}, callback, asyncState);
        }
        
        /// <remarks/>
        public DeployInformation[] EndReadAutoDeployableAssets(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadAutoDeployableAssetsAsync(System.DateTime timestampGreaterThan) {
            this.ReadAutoDeployableAssetsAsync(timestampGreaterThan, null);
        }
        
        /// <remarks/>
        public void ReadAutoDeployableAssetsAsync(System.DateTime timestampGreaterThan, object userState) {
            if ((this.ReadAutoDeployableAssetsOperationCompleted == null)) {
                this.ReadAutoDeployableAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAutoDeployableAssetsOperationCompleted);
            }
            this.InvokeAsync("ReadAutoDeployableAssets", new object[] {
                        timestampGreaterThan}, this.ReadAutoDeployableAssetsOperationCompleted, userState);
        }
        
        private void OnReadAutoDeployableAssetsOperationCompleted(object arg) {
            if ((this.ReadAutoDeployableAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadAutoDeployableAssetsCompleted(this, new ReadAutoDeployableAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/ReadAutoDeployableAssetsV2", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeployInformationEx[] ReadAutoDeployableAssetsV2(System.DateTime timestampGreaterThan, bool exactMatch, AssetContentMask typesInclude, AssetContentMask typesExclude) {
            object[] results = this.Invoke("ReadAutoDeployableAssetsV2", new object[] {
                        timestampGreaterThan,
                        exactMatch,
                        typesInclude,
                        typesExclude});
            return ((DeployInformationEx[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReadAutoDeployableAssetsV2(System.DateTime timestampGreaterThan, bool exactMatch, AssetContentMask typesInclude, AssetContentMask typesExclude, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReadAutoDeployableAssetsV2", new object[] {
                        timestampGreaterThan,
                        exactMatch,
                        typesInclude,
                        typesExclude}, callback, asyncState);
        }
        
        /// <remarks/>
        public DeployInformationEx[] EndReadAutoDeployableAssetsV2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeployInformationEx[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadAutoDeployableAssetsV2Async(System.DateTime timestampGreaterThan, bool exactMatch, AssetContentMask typesInclude, AssetContentMask typesExclude) {
            this.ReadAutoDeployableAssetsV2Async(timestampGreaterThan, exactMatch, typesInclude, typesExclude, null);
        }
        
        /// <remarks/>
        public void ReadAutoDeployableAssetsV2Async(System.DateTime timestampGreaterThan, bool exactMatch, AssetContentMask typesInclude, AssetContentMask typesExclude, object userState) {
            if ((this.ReadAutoDeployableAssetsV2OperationCompleted == null)) {
                this.ReadAutoDeployableAssetsV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAutoDeployableAssetsV2OperationCompleted);
            }
            this.InvokeAsync("ReadAutoDeployableAssetsV2", new object[] {
                        timestampGreaterThan,
                        exactMatch,
                        typesInclude,
                        typesExclude}, this.ReadAutoDeployableAssetsV2OperationCompleted, userState);
        }
        
        private void OnReadAutoDeployableAssetsV2OperationCompleted(object arg) {
            if ((this.ReadAutoDeployableAssetsV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadAutoDeployableAssetsV2Completed(this, new ReadAutoDeployableAssetsV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/ReadAssetsMarkedForDeletion", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeployInformation[] ReadAssetsMarkedForDeletion(System.DateTime timestampGreaterThan) {
            object[] results = this.Invoke("ReadAssetsMarkedForDeletion", new object[] {
                        timestampGreaterThan});
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReadAssetsMarkedForDeletion(System.DateTime timestampGreaterThan, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReadAssetsMarkedForDeletion", new object[] {
                        timestampGreaterThan}, callback, asyncState);
        }
        
        /// <remarks/>
        public DeployInformation[] EndReadAssetsMarkedForDeletion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadAssetsMarkedForDeletionAsync(System.DateTime timestampGreaterThan) {
            this.ReadAssetsMarkedForDeletionAsync(timestampGreaterThan, null);
        }
        
        /// <remarks/>
        public void ReadAssetsMarkedForDeletionAsync(System.DateTime timestampGreaterThan, object userState) {
            if ((this.ReadAssetsMarkedForDeletionOperationCompleted == null)) {
                this.ReadAssetsMarkedForDeletionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAssetsMarkedForDeletionOperationCompleted);
            }
            this.InvokeAsync("ReadAssetsMarkedForDeletion", new object[] {
                        timestampGreaterThan}, this.ReadAssetsMarkedForDeletionOperationCompleted, userState);
        }
        
        private void OnReadAssetsMarkedForDeletionOperationCompleted(object arg) {
            if ((this.ReadAssetsMarkedForDeletionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadAssetsMarkedForDeletionCompleted(this, new ReadAssetsMarkedForDeletionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetDeployableBackendAssetsLikeAssetName", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeployInformation[] GetDeployableBackendAssetsLikeAssetName(uint status, uint count, bool ascending, string assetName) {
            object[] results = this.Invoke("GetDeployableBackendAssetsLikeAssetName", new object[] {
                        status,
                        count,
                        ascending,
                        assetName});
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeployableBackendAssetsLikeAssetName(uint status, uint count, bool ascending, string assetName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeployableBackendAssetsLikeAssetName", new object[] {
                        status,
                        count,
                        ascending,
                        assetName}, callback, asyncState);
        }
        
        /// <remarks/>
        public DeployInformation[] EndGetDeployableBackendAssetsLikeAssetName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeployableBackendAssetsLikeAssetNameAsync(uint status, uint count, bool ascending, string assetName) {
            this.GetDeployableBackendAssetsLikeAssetNameAsync(status, count, ascending, assetName, null);
        }
        
        /// <remarks/>
        public void GetDeployableBackendAssetsLikeAssetNameAsync(uint status, uint count, bool ascending, string assetName, object userState) {
            if ((this.GetDeployableBackendAssetsLikeAssetNameOperationCompleted == null)) {
                this.GetDeployableBackendAssetsLikeAssetNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeployableBackendAssetsLikeAssetNameOperationCompleted);
            }
            this.InvokeAsync("GetDeployableBackendAssetsLikeAssetName", new object[] {
                        status,
                        count,
                        ascending,
                        assetName}, this.GetDeployableBackendAssetsLikeAssetNameOperationCompleted, userState);
        }
        
        private void OnGetDeployableBackendAssetsLikeAssetNameOperationCompleted(object arg) {
            if ((this.GetDeployableBackendAssetsLikeAssetNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeployableBackendAssetsLikeAssetNameCompleted(this, new GetDeployableBackendAssetsLikeAssetNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetDeployableBackendAssetsLikeAssetID", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeployInformation[] GetDeployableBackendAssetsLikeAssetID(uint status, uint count, bool ascending, string assetID) {
            object[] results = this.Invoke("GetDeployableBackendAssetsLikeAssetID", new object[] {
                        status,
                        count,
                        ascending,
                        assetID});
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeployableBackendAssetsLikeAssetID(uint status, uint count, bool ascending, string assetID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeployableBackendAssetsLikeAssetID", new object[] {
                        status,
                        count,
                        ascending,
                        assetID}, callback, asyncState);
        }
        
        /// <remarks/>
        public DeployInformation[] EndGetDeployableBackendAssetsLikeAssetID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeployableBackendAssetsLikeAssetIDAsync(uint status, uint count, bool ascending, string assetID) {
            this.GetDeployableBackendAssetsLikeAssetIDAsync(status, count, ascending, assetID, null);
        }
        
        /// <remarks/>
        public void GetDeployableBackendAssetsLikeAssetIDAsync(uint status, uint count, bool ascending, string assetID, object userState) {
            if ((this.GetDeployableBackendAssetsLikeAssetIDOperationCompleted == null)) {
                this.GetDeployableBackendAssetsLikeAssetIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeployableBackendAssetsLikeAssetIDOperationCompleted);
            }
            this.InvokeAsync("GetDeployableBackendAssetsLikeAssetID", new object[] {
                        status,
                        count,
                        ascending,
                        assetID}, this.GetDeployableBackendAssetsLikeAssetIDOperationCompleted, userState);
        }
        
        private void OnGetDeployableBackendAssetsLikeAssetIDOperationCompleted(object arg) {
            if ((this.GetDeployableBackendAssetsLikeAssetIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeployableBackendAssetsLikeAssetIDCompleted(this, new GetDeployableBackendAssetsLikeAssetIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetDeployableBackendAssetsLikeProviderID", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeployInformation[] GetDeployableBackendAssetsLikeProviderID(uint status, uint count, bool ascending, string providerID) {
            object[] results = this.Invoke("GetDeployableBackendAssetsLikeProviderID", new object[] {
                        status,
                        count,
                        ascending,
                        providerID});
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeployableBackendAssetsLikeProviderID(uint status, uint count, bool ascending, string providerID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeployableBackendAssetsLikeProviderID", new object[] {
                        status,
                        count,
                        ascending,
                        providerID}, callback, asyncState);
        }
        
        /// <remarks/>
        public DeployInformation[] EndGetDeployableBackendAssetsLikeProviderID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeployableBackendAssetsLikeProviderIDAsync(uint status, uint count, bool ascending, string providerID) {
            this.GetDeployableBackendAssetsLikeProviderIDAsync(status, count, ascending, providerID, null);
        }
        
        /// <remarks/>
        public void GetDeployableBackendAssetsLikeProviderIDAsync(uint status, uint count, bool ascending, string providerID, object userState) {
            if ((this.GetDeployableBackendAssetsLikeProviderIDOperationCompleted == null)) {
                this.GetDeployableBackendAssetsLikeProviderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeployableBackendAssetsLikeProviderIDOperationCompleted);
            }
            this.InvokeAsync("GetDeployableBackendAssetsLikeProviderID", new object[] {
                        status,
                        count,
                        ascending,
                        providerID}, this.GetDeployableBackendAssetsLikeProviderIDOperationCompleted, userState);
        }
        
        private void OnGetDeployableBackendAssetsLikeProviderIDOperationCompleted(object arg) {
            if ((this.GetDeployableBackendAssetsLikeProviderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeployableBackendAssetsLikeProviderIDCompleted(this, new GetDeployableBackendAssetsLikeProviderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetValidationCategories(ValidationCategory categories) {
            this.Invoke("SetValidationCategories", new object[] {
                        categories});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetValidationCategories(ValidationCategory categories, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetValidationCategories", new object[] {
                        categories}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetValidationCategories(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetValidationCategoriesAsync(ValidationCategory categories) {
            this.SetValidationCategoriesAsync(categories, null);
        }
        
        /// <remarks/>
        public void SetValidationCategoriesAsync(ValidationCategory categories, object userState) {
            if ((this.SetValidationCategoriesOperationCompleted == null)) {
                this.SetValidationCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetValidationCategoriesOperationCompleted);
            }
            this.InvokeAsync("SetValidationCategories", new object[] {
                        categories}, this.SetValidationCategoriesOperationCompleted, userState);
        }
        
        private void OnSetValidationCategoriesOperationCompleted(object arg) {
            if ((this.SetValidationCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetValidationCategoriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ValidationCategory GetValidationCategories() {
            object[] results = this.Invoke("GetValidationCategories", new object[0]);
            return ((ValidationCategory)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValidationCategories(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValidationCategories", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ValidationCategory EndGetValidationCategories(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ValidationCategory)(results[0]));
        }
        
        /// <remarks/>
        public void GetValidationCategoriesAsync() {
            this.GetValidationCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetValidationCategoriesAsync(object userState) {
            if ((this.GetValidationCategoriesOperationCompleted == null)) {
                this.GetValidationCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidationCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetValidationCategories", new object[0], this.GetValidationCategoriesOperationCompleted, userState);
        }
        
        private void OnGetValidationCategoriesOperationCompleted(object arg) {
            if ((this.GetValidationCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidationCategoriesCompleted(this, new GetValidationCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteImportRule(System.Guid ruleID, uint ruleVersion) {
            this.Invoke("DeleteImportRule", new object[] {
                        ruleID,
                        ruleVersion});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteImportRule(System.Guid ruleID, uint ruleVersion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteImportRule", new object[] {
                        ruleID,
                        ruleVersion}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteImportRule(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteImportRuleAsync(System.Guid ruleID, uint ruleVersion) {
            this.DeleteImportRuleAsync(ruleID, ruleVersion, null);
        }
        
        /// <remarks/>
        public void DeleteImportRuleAsync(System.Guid ruleID, uint ruleVersion, object userState) {
            if ((this.DeleteImportRuleOperationCompleted == null)) {
                this.DeleteImportRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImportRuleOperationCompleted);
            }
            this.InvokeAsync("DeleteImportRule", new object[] {
                        ruleID,
                        ruleVersion}, this.DeleteImportRuleOperationCompleted, userState);
        }
        
        private void OnDeleteImportRuleOperationCompleted(object arg) {
            if ((this.DeleteImportRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImportRuleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/MoveImportRules", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveImportRules(RuleMove[] ruleMoves) {
            this.Invoke("MoveImportRules", new object[] {
                        ruleMoves});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveImportRules(RuleMove[] ruleMoves, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveImportRules", new object[] {
                        ruleMoves}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndMoveImportRules(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void MoveImportRulesAsync(RuleMove[] ruleMoves) {
            this.MoveImportRulesAsync(ruleMoves, null);
        }
        
        /// <remarks/>
        public void MoveImportRulesAsync(RuleMove[] ruleMoves, object userState) {
            if ((this.MoveImportRulesOperationCompleted == null)) {
                this.MoveImportRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveImportRulesOperationCompleted);
            }
            this.InvokeAsync("MoveImportRules", new object[] {
                        ruleMoves}, this.MoveImportRulesOperationCompleted, userState);
        }
        
        private void OnMoveImportRulesOperationCompleted(object arg) {
            if ((this.MoveImportRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveImportRulesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveImportRule(ImportRuleDefinition newRule) {
            this.Invoke("SaveImportRule", new object[] {
                        newRule});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveImportRule(ImportRuleDefinition newRule, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveImportRule", new object[] {
                        newRule}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSaveImportRule(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SaveImportRuleAsync(ImportRuleDefinition newRule) {
            this.SaveImportRuleAsync(newRule, null);
        }
        
        /// <remarks/>
        public void SaveImportRuleAsync(ImportRuleDefinition newRule, object userState) {
            if ((this.SaveImportRuleOperationCompleted == null)) {
                this.SaveImportRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveImportRuleOperationCompleted);
            }
            this.InvokeAsync("SaveImportRule", new object[] {
                        newRule}, this.SaveImportRuleOperationCompleted, userState);
        }
        
        private void OnSaveImportRuleOperationCompleted(object arg) {
            if ((this.SaveImportRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveImportRuleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImportRuleDefinition GetImportRule(System.Guid ruleID) {
            object[] results = this.Invoke("GetImportRule", new object[] {
                        ruleID});
            return ((ImportRuleDefinition)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetImportRule(System.Guid ruleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetImportRule", new object[] {
                        ruleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ImportRuleDefinition EndGetImportRule(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ImportRuleDefinition)(results[0]));
        }
        
        /// <remarks/>
        public void GetImportRuleAsync(System.Guid ruleID) {
            this.GetImportRuleAsync(ruleID, null);
        }
        
        /// <remarks/>
        public void GetImportRuleAsync(System.Guid ruleID, object userState) {
            if ((this.GetImportRuleOperationCompleted == null)) {
                this.GetImportRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImportRuleOperationCompleted);
            }
            this.InvokeAsync("GetImportRule", new object[] {
                        ruleID}, this.GetImportRuleOperationCompleted, userState);
        }
        
        private void OnGetImportRuleOperationCompleted(object arg) {
            if ((this.GetImportRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImportRuleCompleted(this, new GetImportRuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImportRuleDefinition[] GetCurrentImportRules() {
            object[] results = this.Invoke("GetCurrentImportRules", new object[0]);
            return ((ImportRuleDefinition[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCurrentImportRules(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCurrentImportRules", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ImportRuleDefinition[] EndGetCurrentImportRules(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ImportRuleDefinition[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentImportRulesAsync() {
            this.GetCurrentImportRulesAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentImportRulesAsync(object userState) {
            if ((this.GetCurrentImportRulesOperationCompleted == null)) {
                this.GetCurrentImportRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentImportRulesOperationCompleted);
            }
            this.InvokeAsync("GetCurrentImportRules", new object[0], this.GetCurrentImportRulesOperationCompleted, userState);
        }
        
        private void OnGetCurrentImportRulesOperationCompleted(object arg) {
            if ((this.GetCurrentImportRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentImportRulesCompleted(this, new GetCurrentImportRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse IngestAsset(StatusInformation[] statusItems) {
            object[] results = this.Invoke("IngestAsset", new object[] {
                        statusItems});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIngestAsset(StatusInformation[] statusItems, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IngestAsset", new object[] {
                        statusItems}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndIngestAsset(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void IngestAssetAsync(StatusInformation[] statusItems) {
            this.IngestAssetAsync(statusItems, null);
        }
        
        /// <remarks/>
        public void IngestAssetAsync(StatusInformation[] statusItems, object userState) {
            if ((this.IngestAssetOperationCompleted == null)) {
                this.IngestAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIngestAssetOperationCompleted);
            }
            this.InvokeAsync("IngestAsset", new object[] {
                        statusItems}, this.IngestAssetOperationCompleted, userState);
        }
        
        private void OnIngestAssetOperationCompleted(object arg) {
            if ((this.IngestAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IngestAssetCompleted(this, new IngestAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse ImportAssets(StatusInformation[] statusItems) {
            object[] results = this.Invoke("ImportAssets", new object[] {
                        statusItems});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginImportAssets(StatusInformation[] statusItems, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ImportAssets", new object[] {
                        statusItems}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndImportAssets(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ImportAssetsAsync(StatusInformation[] statusItems) {
            this.ImportAssetsAsync(statusItems, null);
        }
        
        /// <remarks/>
        public void ImportAssetsAsync(StatusInformation[] statusItems, object userState) {
            if ((this.ImportAssetsOperationCompleted == null)) {
                this.ImportAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportAssetsOperationCompleted);
            }
            this.InvokeAsync("ImportAssets", new object[] {
                        statusItems}, this.ImportAssetsOperationCompleted, userState);
        }
        
        private void OnImportAssetsOperationCompleted(object arg) {
            if ((this.ImportAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportAssetsCompleted(this, new ImportAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse ReimportAll(StatusInformation[] statusItems) {
            object[] results = this.Invoke("ReimportAll", new object[] {
                        statusItems});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReimportAll(StatusInformation[] statusItems, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReimportAll", new object[] {
                        statusItems}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndReimportAll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ReimportAllAsync(StatusInformation[] statusItems) {
            this.ReimportAllAsync(statusItems, null);
        }
        
        /// <remarks/>
        public void ReimportAllAsync(StatusInformation[] statusItems, object userState) {
            if ((this.ReimportAllOperationCompleted == null)) {
                this.ReimportAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReimportAllOperationCompleted);
            }
            this.InvokeAsync("ReimportAll", new object[] {
                        statusItems}, this.ReimportAllOperationCompleted, userState);
        }
        
        private void OnReimportAllOperationCompleted(object arg) {
            if ((this.ReimportAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReimportAllCompleted(this, new ReimportAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse ReimportMetadata(StatusInformation[] statusItems) {
            object[] results = this.Invoke("ReimportMetadata", new object[] {
                        statusItems});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReimportMetadata(StatusInformation[] statusItems, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReimportMetadata", new object[] {
                        statusItems}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndReimportMetadata(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ReimportMetadataAsync(StatusInformation[] statusItems) {
            this.ReimportMetadataAsync(statusItems, null);
        }
        
        /// <remarks/>
        public void ReimportMetadataAsync(StatusInformation[] statusItems, object userState) {
            if ((this.ReimportMetadataOperationCompleted == null)) {
                this.ReimportMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReimportMetadataOperationCompleted);
            }
            this.InvokeAsync("ReimportMetadata", new object[] {
                        statusItems}, this.ReimportMetadataOperationCompleted, userState);
        }
        
        private void OnReimportMetadataOperationCompleted(object arg) {
            if ((this.ReimportMetadataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReimportMetadataCompleted(this, new ReimportMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInformation GetImportStatusInformationById(string assetId, string providerId) {
            object[] results = this.Invoke("GetImportStatusInformationById", new object[] {
                        assetId,
                        providerId});
            return ((StatusInformation)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetImportStatusInformationById(string assetId, string providerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetImportStatusInformationById", new object[] {
                        assetId,
                        providerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public StatusInformation EndGetImportStatusInformationById(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((StatusInformation)(results[0]));
        }
        
        /// <remarks/>
        public void GetImportStatusInformationByIdAsync(string assetId, string providerId) {
            this.GetImportStatusInformationByIdAsync(assetId, providerId, null);
        }
        
        /// <remarks/>
        public void GetImportStatusInformationByIdAsync(string assetId, string providerId, object userState) {
            if ((this.GetImportStatusInformationByIdOperationCompleted == null)) {
                this.GetImportStatusInformationByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImportStatusInformationByIdOperationCompleted);
            }
            this.InvokeAsync("GetImportStatusInformationById", new object[] {
                        assetId,
                        providerId}, this.GetImportStatusInformationByIdOperationCompleted, userState);
        }
        
        private void OnGetImportStatusInformationByIdOperationCompleted(object arg) {
            if ((this.GetImportStatusInformationByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImportStatusInformationByIdCompleted(this, new GetImportStatusInformationByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsVODCreatorStationReady() {
            object[] results = this.Invoke("IsVODCreatorStationReady", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsVODCreatorStationReady(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsVODCreatorStationReady", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsVODCreatorStationReady(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsVODCreatorStationReadyAsync() {
            this.IsVODCreatorStationReadyAsync(null);
        }
        
        /// <remarks/>
        public void IsVODCreatorStationReadyAsync(object userState) {
            if ((this.IsVODCreatorStationReadyOperationCompleted == null)) {
                this.IsVODCreatorStationReadyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsVODCreatorStationReadyOperationCompleted);
            }
            this.InvokeAsync("IsVODCreatorStationReady", new object[0], this.IsVODCreatorStationReadyOperationCompleted, userState);
        }
        
        private void OnIsVODCreatorStationReadyOperationCompleted(object arg) {
            if ((this.IsVODCreatorStationReadyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsVODCreatorStationReadyCompleted(this, new IsVODCreatorStationReadyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAssetMetadataFromBackend(string assetId, string providerId) {
            object[] results = this.Invoke("GetAssetMetadataFromBackend", new object[] {
                        assetId,
                        providerId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAssetMetadataFromBackend(string assetId, string providerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAssetMetadataFromBackend", new object[] {
                        assetId,
                        providerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetAssetMetadataFromBackend(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssetMetadataFromBackendAsync(string assetId, string providerId) {
            this.GetAssetMetadataFromBackendAsync(assetId, providerId, null);
        }
        
        /// <remarks/>
        public void GetAssetMetadataFromBackendAsync(string assetId, string providerId, object userState) {
            if ((this.GetAssetMetadataFromBackendOperationCompleted == null)) {
                this.GetAssetMetadataFromBackendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetMetadataFromBackendOperationCompleted);
            }
            this.InvokeAsync("GetAssetMetadataFromBackend", new object[] {
                        assetId,
                        providerId}, this.GetAssetMetadataFromBackendOperationCompleted, userState);
        }
        
        private void OnGetAssetMetadataFromBackendOperationCompleted(object arg) {
            if ((this.GetAssetMetadataFromBackendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssetMetadataFromBackendCompleted(this, new GetAssetMetadataFromBackendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse SaveAssetMetadataInBackend(string assetId, string providerId, System.Xml.XmlNode metadata) {
            object[] results = this.Invoke("SaveAssetMetadataInBackend", new object[] {
                        assetId,
                        providerId,
                        metadata});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveAssetMetadataInBackend(string assetId, string providerId, System.Xml.XmlNode metadata, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveAssetMetadataInBackend", new object[] {
                        assetId,
                        providerId,
                        metadata}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndSaveAssetMetadataInBackend(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAssetMetadataInBackendAsync(string assetId, string providerId, System.Xml.XmlNode metadata) {
            this.SaveAssetMetadataInBackendAsync(assetId, providerId, metadata, null);
        }
        
        /// <remarks/>
        public void SaveAssetMetadataInBackendAsync(string assetId, string providerId, System.Xml.XmlNode metadata, object userState) {
            if ((this.SaveAssetMetadataInBackendOperationCompleted == null)) {
                this.SaveAssetMetadataInBackendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAssetMetadataInBackendOperationCompleted);
            }
            this.InvokeAsync("SaveAssetMetadataInBackend", new object[] {
                        assetId,
                        providerId,
                        metadata}, this.SaveAssetMetadataInBackendOperationCompleted, userState);
        }
        
        private void OnSaveAssetMetadataInBackendOperationCompleted(object arg) {
            if ((this.SaveAssetMetadataInBackendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAssetMetadataInBackendCompleted(this, new SaveAssetMetadataInBackendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse DeleteAssetFromBackend(string providerAssetId, string providerId) {
            object[] results = this.Invoke("DeleteAssetFromBackend", new object[] {
                        providerAssetId,
                        providerId});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteAssetFromBackend(string providerAssetId, string providerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteAssetFromBackend", new object[] {
                        providerAssetId,
                        providerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndDeleteAssetFromBackend(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAssetFromBackendAsync(string providerAssetId, string providerId) {
            this.DeleteAssetFromBackendAsync(providerAssetId, providerId, null);
        }
        
        /// <remarks/>
        public void DeleteAssetFromBackendAsync(string providerAssetId, string providerId, object userState) {
            if ((this.DeleteAssetFromBackendOperationCompleted == null)) {
                this.DeleteAssetFromBackendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAssetFromBackendOperationCompleted);
            }
            this.InvokeAsync("DeleteAssetFromBackend", new object[] {
                        providerAssetId,
                        providerId}, this.DeleteAssetFromBackendOperationCompleted, userState);
        }
        
        private void OnDeleteAssetFromBackendOperationCompleted(object arg) {
            if ((this.DeleteAssetFromBackendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAssetFromBackendCompleted(this, new DeleteAssetFromBackendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse DeleteAssetFromBackendAndBranch(string providerAssetId, string providerId) {
            object[] results = this.Invoke("DeleteAssetFromBackendAndBranch", new object[] {
                        providerAssetId,
                        providerId});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteAssetFromBackendAndBranch(string providerAssetId, string providerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteAssetFromBackendAndBranch", new object[] {
                        providerAssetId,
                        providerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndDeleteAssetFromBackendAndBranch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAssetFromBackendAndBranchAsync(string providerAssetId, string providerId) {
            this.DeleteAssetFromBackendAndBranchAsync(providerAssetId, providerId, null);
        }
        
        /// <remarks/>
        public void DeleteAssetFromBackendAndBranchAsync(string providerAssetId, string providerId, object userState) {
            if ((this.DeleteAssetFromBackendAndBranchOperationCompleted == null)) {
                this.DeleteAssetFromBackendAndBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAssetFromBackendAndBranchOperationCompleted);
            }
            this.InvokeAsync("DeleteAssetFromBackendAndBranch", new object[] {
                        providerAssetId,
                        providerId}, this.DeleteAssetFromBackendAndBranchOperationCompleted, userState);
        }
        
        private void OnDeleteAssetFromBackendAndBranchOperationCompleted(object arg) {
            if ((this.DeleteAssetFromBackendAndBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAssetFromBackendAndBranchCompleted(this, new DeleteAssetFromBackendAndBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse RemoveAsset(string providerAssetId, string providerId, bool deleteFromBranches, bool deleteFromAssetLocation) {
            object[] results = this.Invoke("RemoveAsset", new object[] {
                        providerAssetId,
                        providerId,
                        deleteFromBranches,
                        deleteFromAssetLocation});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveAsset(string providerAssetId, string providerId, bool deleteFromBranches, bool deleteFromAssetLocation, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveAsset", new object[] {
                        providerAssetId,
                        providerId,
                        deleteFromBranches,
                        deleteFromAssetLocation}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndRemoveAsset(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAssetAsync(string providerAssetId, string providerId, bool deleteFromBranches, bool deleteFromAssetLocation) {
            this.RemoveAssetAsync(providerAssetId, providerId, deleteFromBranches, deleteFromAssetLocation, null);
        }
        
        /// <remarks/>
        public void RemoveAssetAsync(string providerAssetId, string providerId, bool deleteFromBranches, bool deleteFromAssetLocation, object userState) {
            if ((this.RemoveAssetOperationCompleted == null)) {
                this.RemoveAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAssetOperationCompleted);
            }
            this.InvokeAsync("RemoveAsset", new object[] {
                        providerAssetId,
                        providerId,
                        deleteFromBranches,
                        deleteFromAssetLocation}, this.RemoveAssetOperationCompleted, userState);
        }
        
        private void OnRemoveAssetOperationCompleted(object arg) {
            if ((this.RemoveAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAssetCompleted(this, new RemoveAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/ReadDRMConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DRMConfiguration ReadDRMConfiguration() {
            object[] results = this.Invoke("ReadDRMConfiguration", new object[0]);
            return ((DRMConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReadDRMConfiguration(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReadDRMConfiguration", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DRMConfiguration EndReadDRMConfiguration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DRMConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public void ReadDRMConfigurationAsync() {
            this.ReadDRMConfigurationAsync(null);
        }
        
        /// <remarks/>
        public void ReadDRMConfigurationAsync(object userState) {
            if ((this.ReadDRMConfigurationOperationCompleted == null)) {
                this.ReadDRMConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadDRMConfigurationOperationCompleted);
            }
            this.InvokeAsync("ReadDRMConfiguration", new object[0], this.ReadDRMConfigurationOperationCompleted, userState);
        }
        
        private void OnReadDRMConfigurationOperationCompleted(object arg) {
            if ((this.ReadDRMConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadDRMConfigurationCompleted(this, new ReadDRMConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/UpdateDRMConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse UpdateDRMConfiguration(DRMConfiguration drmConfiguration) {
            object[] results = this.Invoke("UpdateDRMConfiguration", new object[] {
                        drmConfiguration});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateDRMConfiguration(DRMConfiguration drmConfiguration, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateDRMConfiguration", new object[] {
                        drmConfiguration}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndUpdateDRMConfiguration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDRMConfigurationAsync(DRMConfiguration drmConfiguration) {
            this.UpdateDRMConfigurationAsync(drmConfiguration, null);
        }
        
        /// <remarks/>
        public void UpdateDRMConfigurationAsync(DRMConfiguration drmConfiguration, object userState) {
            if ((this.UpdateDRMConfigurationOperationCompleted == null)) {
                this.UpdateDRMConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDRMConfigurationOperationCompleted);
            }
            this.InvokeAsync("UpdateDRMConfiguration", new object[] {
                        drmConfiguration}, this.UpdateDRMConfigurationOperationCompleted, userState);
        }
        
        private void OnUpdateDRMConfigurationOperationCompleted(object arg) {
            if ((this.UpdateDRMConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDRMConfigurationCompleted(this, new UpdateDRMConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetAssetKeyInfo", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AssetKeyInfo GetAssetKeyInfo([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] branchCertificate, string assetId, string providerId) {
            object[] results = this.Invoke("GetAssetKeyInfo", new object[] {
                        branchCertificate,
                        assetId,
                        providerId});
            return ((AssetKeyInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAssetKeyInfo(byte[] branchCertificate, string assetId, string providerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAssetKeyInfo", new object[] {
                        branchCertificate,
                        assetId,
                        providerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public AssetKeyInfo EndGetAssetKeyInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AssetKeyInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssetKeyInfoAsync(byte[] branchCertificate, string assetId, string providerId) {
            this.GetAssetKeyInfoAsync(branchCertificate, assetId, providerId, null);
        }
        
        /// <remarks/>
        public void GetAssetKeyInfoAsync(byte[] branchCertificate, string assetId, string providerId, object userState) {
            if ((this.GetAssetKeyInfoOperationCompleted == null)) {
                this.GetAssetKeyInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetKeyInfoOperationCompleted);
            }
            this.InvokeAsync("GetAssetKeyInfo", new object[] {
                        branchCertificate,
                        assetId,
                        providerId}, this.GetAssetKeyInfoOperationCompleted, userState);
        }
        
        private void OnGetAssetKeyInfoOperationCompleted(object arg) {
            if ((this.GetAssetKeyInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssetKeyInfoCompleted(this, new GetAssetKeyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetAssetMediaInfo", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AssetMediaInfo GetAssetMediaInfo(string assetSourceName) {
            object[] results = this.Invoke("GetAssetMediaInfo", new object[] {
                        assetSourceName});
            return ((AssetMediaInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAssetMediaInfo(string assetSourceName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAssetMediaInfo", new object[] {
                        assetSourceName}, callback, asyncState);
        }
        
        /// <remarks/>
        public AssetMediaInfo EndGetAssetMediaInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AssetMediaInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssetMediaInfoAsync(string assetSourceName) {
            this.GetAssetMediaInfoAsync(assetSourceName, null);
        }
        
        /// <remarks/>
        public void GetAssetMediaInfoAsync(string assetSourceName, object userState) {
            if ((this.GetAssetMediaInfoOperationCompleted == null)) {
                this.GetAssetMediaInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetMediaInfoOperationCompleted);
            }
            this.InvokeAsync("GetAssetMediaInfo", new object[] {
                        assetSourceName}, this.GetAssetMediaInfoOperationCompleted, userState);
        }
        
        private void OnGetAssetMediaInfoOperationCompleted(object arg) {
            if ((this.GetAssetMediaInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssetMediaInfoCompleted(this, new GetAssetMediaInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImportConfiguration GetServiceConfiguration() {
            object[] results = this.Invoke("GetServiceConfiguration", new object[0]);
            return ((ImportConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServiceConfiguration(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServiceConfiguration", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ImportConfiguration EndGetServiceConfiguration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ImportConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceConfigurationAsync() {
            this.GetServiceConfigurationAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceConfigurationAsync(object userState) {
            if ((this.GetServiceConfigurationOperationCompleted == null)) {
                this.GetServiceConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetServiceConfiguration", new object[0], this.GetServiceConfigurationOperationCompleted, userState);
        }
        
        private void OnGetServiceConfigurationOperationCompleted(object arg) {
            if ((this.GetServiceConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceConfigurationCompleted(this, new GetServiceConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse SetServiceConfiguration(ImportConfiguration config) {
            object[] results = this.Invoke("SetServiceConfiguration", new object[] {
                        config});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetServiceConfiguration(ImportConfiguration config, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetServiceConfiguration", new object[] {
                        config}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndSetServiceConfiguration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetServiceConfigurationAsync(ImportConfiguration config) {
            this.SetServiceConfigurationAsync(config, null);
        }
        
        /// <remarks/>
        public void SetServiceConfigurationAsync(ImportConfiguration config, object userState) {
            if ((this.SetServiceConfigurationOperationCompleted == null)) {
                this.SetServiceConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetServiceConfigurationOperationCompleted);
            }
            this.InvokeAsync("SetServiceConfiguration", new object[] {
                        config}, this.SetServiceConfigurationOperationCompleted, userState);
        }
        
        private void OnSetServiceConfigurationOperationCompleted(object arg) {
            if ((this.SetServiceConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetServiceConfigurationCompleted(this, new SetServiceConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RequiredMetadata GetValidationRules() {
            object[] results = this.Invoke("GetValidationRules", new object[0]);
            return ((RequiredMetadata)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValidationRules(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValidationRules", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public RequiredMetadata EndGetValidationRules(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RequiredMetadata)(results[0]));
        }
        
        /// <remarks/>
        public void GetValidationRulesAsync() {
            this.GetValidationRulesAsync(null);
        }
        
        /// <remarks/>
        public void GetValidationRulesAsync(object userState) {
            if ((this.GetValidationRulesOperationCompleted == null)) {
                this.GetValidationRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidationRulesOperationCompleted);
            }
            this.InvokeAsync("GetValidationRules", new object[0], this.GetValidationRulesOperationCompleted, userState);
        }
        
        private void OnGetValidationRulesOperationCompleted(object arg) {
            if ((this.GetValidationRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidationRulesCompleted(this, new GetValidationRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse SetValidationRules(RequiredMetadata metadata) {
            object[] results = this.Invoke("SetValidationRules", new object[] {
                        metadata});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetValidationRules(RequiredMetadata metadata, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetValidationRules", new object[] {
                        metadata}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndSetValidationRules(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetValidationRulesAsync(RequiredMetadata metadata) {
            this.SetValidationRulesAsync(metadata, null);
        }
        
        /// <remarks/>
        public void SetValidationRulesAsync(RequiredMetadata metadata, object userState) {
            if ((this.SetValidationRulesOperationCompleted == null)) {
                this.SetValidationRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetValidationRulesOperationCompleted);
            }
            this.InvokeAsync("SetValidationRules", new object[] {
                        metadata}, this.SetValidationRulesOperationCompleted, userState);
        }
        
        private void OnSetValidationRulesOperationCompleted(object arg) {
            if ((this.SetValidationRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetValidationRulesCompleted(this, new SetValidationRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaProfiles GetMediaProfiles() {
            object[] results = this.Invoke("GetMediaProfiles", new object[0]);
            return ((MediaProfiles)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMediaProfiles(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMediaProfiles", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public MediaProfiles EndGetMediaProfiles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MediaProfiles)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaProfilesAsync() {
            this.GetMediaProfilesAsync(null);
        }
        
        /// <remarks/>
        public void GetMediaProfilesAsync(object userState) {
            if ((this.GetMediaProfilesOperationCompleted == null)) {
                this.GetMediaProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaProfilesOperationCompleted);
            }
            this.InvokeAsync("GetMediaProfiles", new object[0], this.GetMediaProfilesOperationCompleted, userState);
        }
        
        private void OnGetMediaProfilesOperationCompleted(object arg) {
            if ((this.GetMediaProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaProfilesCompleted(this, new GetMediaProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VodResponse SetMediaProfiles(MediaProfiles mediaProfile) {
            object[] results = this.Invoke("SetMediaProfiles", new object[] {
                        mediaProfile});
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetMediaProfiles(MediaProfiles mediaProfile, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetMediaProfiles", new object[] {
                        mediaProfile}, callback, asyncState);
        }
        
        /// <remarks/>
        public VodResponse EndSetMediaProfiles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VodResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetMediaProfilesAsync(MediaProfiles mediaProfile) {
            this.SetMediaProfilesAsync(mediaProfile, null);
        }
        
        /// <remarks/>
        public void SetMediaProfilesAsync(MediaProfiles mediaProfile, object userState) {
            if ((this.SetMediaProfilesOperationCompleted == null)) {
                this.SetMediaProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMediaProfilesOperationCompleted);
            }
            this.InvokeAsync("SetMediaProfiles", new object[] {
                        mediaProfile}, this.SetMediaProfilesOperationCompleted, userState);
        }
        
        private void OnSetMediaProfilesOperationCompleted(object arg) {
            if ((this.SetMediaProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMediaProfilesCompleted(this, new SetMediaProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetPreImportConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BackendPreImportConfiguration GetPreImportConfiguration() {
            object[] results = this.Invoke("GetPreImportConfiguration", new object[0]);
            return ((BackendPreImportConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPreImportConfiguration(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPreImportConfiguration", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public BackendPreImportConfiguration EndGetPreImportConfiguration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BackendPreImportConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public void GetPreImportConfigurationAsync() {
            this.GetPreImportConfigurationAsync(null);
        }
        
        /// <remarks/>
        public void GetPreImportConfigurationAsync(object userState) {
            if ((this.GetPreImportConfigurationOperationCompleted == null)) {
                this.GetPreImportConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreImportConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetPreImportConfiguration", new object[0], this.GetPreImportConfigurationOperationCompleted, userState);
        }
        
        private void OnGetPreImportConfigurationOperationCompleted(object arg) {
            if ((this.GetPreImportConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreImportConfigurationCompleted(this, new GetPreImportConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/SetPreImportConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetPreImportConfiguration(BackendPreImportConfiguration config) {
            this.Invoke("SetPreImportConfiguration", new object[] {
                        config});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPreImportConfiguration(BackendPreImportConfiguration config, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPreImportConfiguration", new object[] {
                        config}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetPreImportConfiguration(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetPreImportConfigurationAsync(BackendPreImportConfiguration config) {
            this.SetPreImportConfigurationAsync(config, null);
        }
        
        /// <remarks/>
        public void SetPreImportConfigurationAsync(BackendPreImportConfiguration config, object userState) {
            if ((this.SetPreImportConfigurationOperationCompleted == null)) {
                this.SetPreImportConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPreImportConfigurationOperationCompleted);
            }
            this.InvokeAsync("SetPreImportConfiguration", new object[] {
                        config}, this.SetPreImportConfigurationOperationCompleted, userState);
        }
        
        private void OnSetPreImportConfigurationOperationCompleted(object arg) {
            if ((this.SetPreImportConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPreImportConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetImportConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BackendImportConfiguration GetImportConfiguration() {
            object[] results = this.Invoke("GetImportConfiguration", new object[0]);
            return ((BackendImportConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetImportConfiguration(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetImportConfiguration", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public BackendImportConfiguration EndGetImportConfiguration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BackendImportConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public void GetImportConfigurationAsync() {
            this.GetImportConfigurationAsync(null);
        }
        
        /// <remarks/>
        public void GetImportConfigurationAsync(object userState) {
            if ((this.GetImportConfigurationOperationCompleted == null)) {
                this.GetImportConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImportConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetImportConfiguration", new object[0], this.GetImportConfigurationOperationCompleted, userState);
        }
        
        private void OnGetImportConfigurationOperationCompleted(object arg) {
            if ((this.GetImportConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImportConfigurationCompleted(this, new GetImportConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/SetImportConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetImportConfiguration(BackendImportConfiguration config) {
            this.Invoke("SetImportConfiguration", new object[] {
                        config});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetImportConfiguration(BackendImportConfiguration config, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetImportConfiguration", new object[] {
                        config}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetImportConfiguration(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetImportConfigurationAsync(BackendImportConfiguration config) {
            this.SetImportConfigurationAsync(config, null);
        }
        
        /// <remarks/>
        public void SetImportConfigurationAsync(BackendImportConfiguration config, object userState) {
            if ((this.SetImportConfigurationOperationCompleted == null)) {
                this.SetImportConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetImportConfigurationOperationCompleted);
            }
            this.InvokeAsync("SetImportConfiguration", new object[] {
                        config}, this.SetImportConfigurationOperationCompleted, userState);
        }
        
        private void OnSetImportConfigurationOperationCompleted(object arg) {
            if ((this.SetImportConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetImportConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetOtherConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BackendOtherConfiguration GetOtherConfiguration() {
            object[] results = this.Invoke("GetOtherConfiguration", new object[0]);
            return ((BackendOtherConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOtherConfiguration(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOtherConfiguration", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public BackendOtherConfiguration EndGetOtherConfiguration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BackendOtherConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public void GetOtherConfigurationAsync() {
            this.GetOtherConfigurationAsync(null);
        }
        
        /// <remarks/>
        public void GetOtherConfigurationAsync(object userState) {
            if ((this.GetOtherConfigurationOperationCompleted == null)) {
                this.GetOtherConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOtherConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetOtherConfiguration", new object[0], this.GetOtherConfigurationOperationCompleted, userState);
        }
        
        private void OnGetOtherConfigurationOperationCompleted(object arg) {
            if ((this.GetOtherConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOtherConfigurationCompleted(this, new GetOtherConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/SetOtherConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOtherConfiguration(BackendOtherConfiguration config) {
            this.Invoke("SetOtherConfiguration", new object[] {
                        config});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetOtherConfiguration(BackendOtherConfiguration config, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetOtherConfiguration", new object[] {
                        config}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetOtherConfiguration(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetOtherConfigurationAsync(BackendOtherConfiguration config) {
            this.SetOtherConfigurationAsync(config, null);
        }
        
        /// <remarks/>
        public void SetOtherConfigurationAsync(BackendOtherConfiguration config, object userState) {
            if ((this.SetOtherConfigurationOperationCompleted == null)) {
                this.SetOtherConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOtherConfigurationOperationCompleted);
            }
            this.InvokeAsync("SetOtherConfiguration", new object[] {
                        config}, this.SetOtherConfigurationOperationCompleted, userState);
        }
        
        private void OnSetOtherConfigurationOperationCompleted(object arg) {
            if ((this.SetOtherConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOtherConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetValidationConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ValidationConfiguration GetValidationConfiguration() {
            object[] results = this.Invoke("GetValidationConfiguration", new object[0]);
            return ((ValidationConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValidationConfiguration(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValidationConfiguration", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ValidationConfiguration EndGetValidationConfiguration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ValidationConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public void GetValidationConfigurationAsync() {
            this.GetValidationConfigurationAsync(null);
        }
        
        /// <remarks/>
        public void GetValidationConfigurationAsync(object userState) {
            if ((this.GetValidationConfigurationOperationCompleted == null)) {
                this.GetValidationConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidationConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetValidationConfiguration", new object[0], this.GetValidationConfigurationOperationCompleted, userState);
        }
        
        private void OnGetValidationConfigurationOperationCompleted(object arg) {
            if ((this.GetValidationConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidationConfigurationCompleted(this, new GetValidationConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/SetValidationConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetValidationConfiguration(ValidationConfiguration config) {
            this.Invoke("SetValidationConfiguration", new object[] {
                        config});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetValidationConfiguration(ValidationConfiguration config, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetValidationConfiguration", new object[] {
                        config}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetValidationConfiguration(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetValidationConfigurationAsync(ValidationConfiguration config) {
            this.SetValidationConfigurationAsync(config, null);
        }
        
        /// <remarks/>
        public void SetValidationConfigurationAsync(ValidationConfiguration config, object userState) {
            if ((this.SetValidationConfigurationOperationCompleted == null)) {
                this.SetValidationConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetValidationConfigurationOperationCompleted);
            }
            this.InvokeAsync("SetValidationConfiguration", new object[] {
                        config}, this.SetValidationConfigurationOperationCompleted, userState);
        }
        
        private void OnSetValidationConfigurationOperationCompleted(object arg) {
            if ((this.SetValidationConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetValidationConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConfigurationNameValue[] GetConfiguration(string name) {
            object[] results = this.Invoke("GetConfiguration", new object[] {
                        name});
            return ((ConfigurationNameValue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetConfiguration(string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetConfiguration", new object[] {
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public ConfigurationNameValue[] EndGetConfiguration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ConfigurationNameValue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationAsync(string name) {
            this.GetConfigurationAsync(name, null);
        }
        
        /// <remarks/>
        public void GetConfigurationAsync(string name, object userState) {
            if ((this.GetConfigurationOperationCompleted == null)) {
                this.GetConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetConfiguration", new object[] {
                        name}, this.GetConfigurationOperationCompleted, userState);
        }
        
        private void OnGetConfigurationOperationCompleted(object arg) {
            if ((this.GetConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationCompleted(this, new GetConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/AddUpdateConfiguration", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUpdateConfiguration(string configurationName, string configrationValue) {
            this.Invoke("AddUpdateConfiguration", new object[] {
                        configurationName,
                        configrationValue});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddUpdateConfiguration(string configurationName, string configrationValue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddUpdateConfiguration", new object[] {
                        configurationName,
                        configrationValue}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddUpdateConfiguration(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void AddUpdateConfigurationAsync(string configurationName, string configrationValue) {
            this.AddUpdateConfigurationAsync(configurationName, configrationValue, null);
        }
        
        /// <remarks/>
        public void AddUpdateConfigurationAsync(string configurationName, string configrationValue, object userState) {
            if ((this.AddUpdateConfigurationOperationCompleted == null)) {
                this.AddUpdateConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUpdateConfigurationOperationCompleted);
            }
            this.InvokeAsync("AddUpdateConfiguration", new object[] {
                        configurationName,
                        configrationValue}, this.AddUpdateConfigurationOperationCompleted, userState);
        }
        
        private void OnAddUpdateConfigurationOperationCompleted(object arg) {
            if ((this.AddUpdateConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUpdateConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInformation[] GetImportStatusInformation() {
            object[] results = this.Invoke("GetImportStatusInformation", new object[0]);
            return ((StatusInformation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetImportStatusInformation(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetImportStatusInformation", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public StatusInformation[] EndGetImportStatusInformation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((StatusInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImportStatusInformationAsync() {
            this.GetImportStatusInformationAsync(null);
        }
        
        /// <remarks/>
        public void GetImportStatusInformationAsync(object userState) {
            if ((this.GetImportStatusInformationOperationCompleted == null)) {
                this.GetImportStatusInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImportStatusInformationOperationCompleted);
            }
            this.InvokeAsync("GetImportStatusInformation", new object[0], this.GetImportStatusInformationOperationCompleted, userState);
        }
        
        private void OnGetImportStatusInformationOperationCompleted(object arg) {
            if ((this.GetImportStatusInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImportStatusInformationCompleted(this, new GetImportStatusInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInformation[] GetImportableAssetInformation() {
            object[] results = this.Invoke("GetImportableAssetInformation", new object[0]);
            return ((StatusInformation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetImportableAssetInformation(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetImportableAssetInformation", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public StatusInformation[] EndGetImportableAssetInformation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((StatusInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImportableAssetInformationAsync() {
            this.GetImportableAssetInformationAsync(null);
        }
        
        /// <remarks/>
        public void GetImportableAssetInformationAsync(object userState) {
            if ((this.GetImportableAssetInformationOperationCompleted == null)) {
                this.GetImportableAssetInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImportableAssetInformationOperationCompleted);
            }
            this.InvokeAsync("GetImportableAssetInformation", new object[0], this.GetImportableAssetInformationOperationCompleted, userState);
        }
        
        private void OnGetImportableAssetInformationOperationCompleted(object arg) {
            if ((this.GetImportableAssetInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImportableAssetInformationCompleted(this, new GetImportableAssetInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusInformation[] GetAssetStatusSorted(AssetStatus status, uint count, bool ascending) {
            object[] results = this.Invoke("GetAssetStatusSorted", new object[] {
                        status,
                        count,
                        ascending});
            return ((StatusInformation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAssetStatusSorted(AssetStatus status, uint count, bool ascending, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAssetStatusSorted", new object[] {
                        status,
                        count,
                        ascending}, callback, asyncState);
        }
        
        /// <remarks/>
        public StatusInformation[] EndGetAssetStatusSorted(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((StatusInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssetStatusSortedAsync(AssetStatus status, uint count, bool ascending) {
            this.GetAssetStatusSortedAsync(status, count, ascending, null);
        }
        
        /// <remarks/>
        public void GetAssetStatusSortedAsync(AssetStatus status, uint count, bool ascending, object userState) {
            if ((this.GetAssetStatusSortedOperationCompleted == null)) {
                this.GetAssetStatusSortedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssetStatusSortedOperationCompleted);
            }
            this.InvokeAsync("GetAssetStatusSorted", new object[] {
                        status,
                        count,
                        ascending}, this.GetAssetStatusSortedOperationCompleted, userState);
        }
        
        private void OnGetAssetStatusSortedOperationCompleted(object arg) {
            if ((this.GetAssetStatusSortedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssetStatusSortedCompleted(this, new GetAssetStatusSortedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Microsoft.TV2.Oss.Vod/GetDeployableAssets", RequestNamespace="Microsoft.TV2.Oss.Vod", ResponseNamespace="Microsoft.TV2.Oss.Vod", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeployInformation[] GetDeployableAssets() {
            object[] results = this.Invoke("GetDeployableAssets", new object[0]);
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeployableAssets(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeployableAssets", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DeployInformation[] EndGetDeployableAssets(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeployInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeployableAssetsAsync() {
            this.GetDeployableAssetsAsync(null);
        }
        
        /// <remarks/>
        public void GetDeployableAssetsAsync(object userState) {
            if ((this.GetDeployableAssetsOperationCompleted == null)) {
                this.GetDeployableAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeployableAssetsOperationCompleted);
            }
            this.InvokeAsync("GetDeployableAssets", new object[0], this.GetDeployableAssetsOperationCompleted, userState);
        }
        
        private void OnGetDeployableAssetsOperationCompleted(object arg) {
            if ((this.GetDeployableAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeployableAssetsCompleted(this, new GetDeployableAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Vod")]
    public partial class DataSourceRegistrationInfo {
        
        private System.Guid dataSourceIdField;
        
        private string dataSourceTypeField;
        
        private string dataSourceVersionField;
        
        private UrlIdentifier[] urlListField;
        
        /// <remarks/>
        public System.Guid DataSourceId {
            get {
                return this.dataSourceIdField;
            }
            set {
                this.dataSourceIdField = value;
            }
        }
        
        /// <remarks/>
        public string DataSourceType {
            get {
                return this.dataSourceTypeField;
            }
            set {
                this.dataSourceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DataSourceVersion {
            get {
                return this.dataSourceVersionField;
            }
            set {
                this.dataSourceVersionField = value;
            }
        }
        
        /// <remarks/>
        public UrlIdentifier[] UrlList {
            get {
                return this.urlListField;
            }
            set {
                this.urlListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss.Vod")]
    public partial class UrlIdentifier {
        
        private string roleNameField;
        
        private string urlField;
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class ConfigurationNameValue {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class ValidationConfiguration {
        
        private string categoryValidationActionField;
        
        /// <remarks/>
        public string CategoryValidationAction {
            get {
                return this.categoryValidationActionField;
            }
            set {
                this.categoryValidationActionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class BackendOtherConfiguration {
        
        private bool useSSLForDeploymentToBranchField;
        
        private bool autoDeleteField;
        
        private bool assetLocationDeleteField;
        
        private bool newMetadataOverridesField;
        
        private uint maxSDBitRateField;
        
        private uint maxHDBitRateField;
        
        private uint sDBitRateCushionField;
        
        private uint hDBitRateCushionField;
        
        private uint bitRateCushionActionField;
        
        private string cGMSADefaultField;
        
        private string macrovisionDefaultField;
        
        /// <remarks/>
        public bool UseSSLForDeploymentToBranch {
            get {
                return this.useSSLForDeploymentToBranchField;
            }
            set {
                this.useSSLForDeploymentToBranchField = value;
            }
        }
        
        /// <remarks/>
        public bool AutoDelete {
            get {
                return this.autoDeleteField;
            }
            set {
                this.autoDeleteField = value;
            }
        }
        
        /// <remarks/>
        public bool AssetLocationDelete {
            get {
                return this.assetLocationDeleteField;
            }
            set {
                this.assetLocationDeleteField = value;
            }
        }
        
        /// <remarks/>
        public bool NewMetadataOverrides {
            get {
                return this.newMetadataOverridesField;
            }
            set {
                this.newMetadataOverridesField = value;
            }
        }
        
        /// <remarks/>
        public uint MaxSDBitRate {
            get {
                return this.maxSDBitRateField;
            }
            set {
                this.maxSDBitRateField = value;
            }
        }
        
        /// <remarks/>
        public uint MaxHDBitRate {
            get {
                return this.maxHDBitRateField;
            }
            set {
                this.maxHDBitRateField = value;
            }
        }
        
        /// <remarks/>
        public uint SDBitRateCushion {
            get {
                return this.sDBitRateCushionField;
            }
            set {
                this.sDBitRateCushionField = value;
            }
        }
        
        /// <remarks/>
        public uint HDBitRateCushion {
            get {
                return this.hDBitRateCushionField;
            }
            set {
                this.hDBitRateCushionField = value;
            }
        }
        
        /// <remarks/>
        public uint BitRateCushionAction {
            get {
                return this.bitRateCushionActionField;
            }
            set {
                this.bitRateCushionActionField = value;
            }
        }
        
        /// <remarks/>
        public string CGMSADefault {
            get {
                return this.cGMSADefaultField;
            }
            set {
                this.cGMSADefaultField = value;
            }
        }
        
        /// <remarks/>
        public string MacrovisionDefault {
            get {
                return this.macrovisionDefaultField;
            }
            set {
                this.macrovisionDefaultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class PIPStreamDefinition {
        
        private uint bitRateField;
        
        private uint widthField;
        
        private uint heightField;
        
        /// <remarks/>
        public uint BitRate {
            get {
                return this.bitRateField;
            }
            set {
                this.bitRateField = value;
            }
        }
        
        /// <remarks/>
        public uint Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public uint Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class PIPConfiguration {
        
        private bool createPIPField;
        
        private PIPStreamDefinition sDStreamField;
        
        private PIPStreamDefinition hDStreamField;
        
        /// <remarks/>
        public bool CreatePIP {
            get {
                return this.createPIPField;
            }
            set {
                this.createPIPField = value;
            }
        }
        
        /// <remarks/>
        public PIPStreamDefinition SDStream {
            get {
                return this.sDStreamField;
            }
            set {
                this.sDStreamField = value;
            }
        }
        
        /// <remarks/>
        public PIPStreamDefinition HDStream {
            get {
                return this.hDStreamField;
            }
            set {
                this.hDStreamField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class TrickStreamConfiguration {
        
        private bool createTrickStreamsField;
        
        private string rewindSpeedsField;
        
        private string fastForwardSpeedsField;
        
        private TrickOptimizationType trickOptmizationField;
        
        private uint trickQualityField;
        
        /// <remarks/>
        public bool CreateTrickStreams {
            get {
                return this.createTrickStreamsField;
            }
            set {
                this.createTrickStreamsField = value;
            }
        }
        
        /// <remarks/>
        public string RewindSpeeds {
            get {
                return this.rewindSpeedsField;
            }
            set {
                this.rewindSpeedsField = value;
            }
        }
        
        /// <remarks/>
        public string FastForwardSpeeds {
            get {
                return this.fastForwardSpeedsField;
            }
            set {
                this.fastForwardSpeedsField = value;
            }
        }
        
        /// <remarks/>
        public TrickOptimizationType TrickOptmization {
            get {
                return this.trickOptmizationField;
            }
            set {
                this.trickOptmizationField = value;
            }
        }
        
        /// <remarks/>
        public uint TrickQuality {
            get {
                return this.trickQualityField;
            }
            set {
                this.trickQualityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public enum TrickOptimizationType {
        
        /// <remarks/>
        BetterPerformance,
        
        /// <remarks/>
        BetterQuality,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class BackendImportConfiguration {
        
        private bool autoImportAssetsField;
        
        private uint defaultAssetPriorityField;
        
        private TrickStreamConfiguration trickStreamConfigField;
        
        private PIPConfiguration pIPConfigField;
        
        private bool protectFeatureField;
        
        private bool protectTrailerField;
        
        private uint keyPeriodField;
        
        /// <remarks/>
        public bool AutoImportAssets {
            get {
                return this.autoImportAssetsField;
            }
            set {
                this.autoImportAssetsField = value;
            }
        }
        
        /// <remarks/>
        public uint DefaultAssetPriority {
            get {
                return this.defaultAssetPriorityField;
            }
            set {
                this.defaultAssetPriorityField = value;
            }
        }
        
        /// <remarks/>
        public TrickStreamConfiguration TrickStreamConfig {
            get {
                return this.trickStreamConfigField;
            }
            set {
                this.trickStreamConfigField = value;
            }
        }
        
        /// <remarks/>
        public PIPConfiguration PIPConfig {
            get {
                return this.pIPConfigField;
            }
            set {
                this.pIPConfigField = value;
            }
        }
        
        /// <remarks/>
        public bool ProtectFeature {
            get {
                return this.protectFeatureField;
            }
            set {
                this.protectFeatureField = value;
            }
        }
        
        /// <remarks/>
        public bool ProtectTrailer {
            get {
                return this.protectTrailerField;
            }
            set {
                this.protectTrailerField = value;
            }
        }
        
        /// <remarks/>
        public uint KeyPeriod {
            get {
                return this.keyPeriodField;
            }
            set {
                this.keyPeriodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class BackendPreImportConfiguration {
        
        private string catcherLocationField;
        
        private string assetLocationField;
        
        private uint pollingIntervalField;
        
        private bool enableISA14CompliantCatchersField;
        
        private bool applyImportRulesField;
        
        /// <remarks/>
        public string CatcherLocation {
            get {
                return this.catcherLocationField;
            }
            set {
                this.catcherLocationField = value;
            }
        }
        
        /// <remarks/>
        public string AssetLocation {
            get {
                return this.assetLocationField;
            }
            set {
                this.assetLocationField = value;
            }
        }
        
        /// <remarks/>
        public uint PollingInterval {
            get {
                return this.pollingIntervalField;
            }
            set {
                this.pollingIntervalField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableISA14CompliantCatchers {
            get {
                return this.enableISA14CompliantCatchersField;
            }
            set {
                this.enableISA14CompliantCatchersField = value;
            }
        }
        
        /// <remarks/>
        public bool ApplyImportRules {
            get {
                return this.applyImportRulesField;
            }
            set {
                this.applyImportRulesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class Speed {
        
        private int rateField;
        
        private bool requiredField;
        
        /// <remarks/>
        public int Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public bool required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class TrickSpeed {
        
        private Speed[] speedsField;
        
        /// <remarks/>
        public Speed[] Speeds {
            get {
                return this.speedsField;
            }
            set {
                this.speedsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class MediaProfile {
        
        private string nameField;
        
        private uint packetPIPBitrateField;
        
        private uint pIPWidthField;
        
        private uint pIPHeightField;
        
        private uint compressionQualityField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public uint PacketPIPBitrate {
            get {
                return this.packetPIPBitrateField;
            }
            set {
                this.packetPIPBitrateField = value;
            }
        }
        
        /// <remarks/>
        public uint PIPWidth {
            get {
                return this.pIPWidthField;
            }
            set {
                this.pIPWidthField = value;
            }
        }
        
        /// <remarks/>
        public uint PIPHeight {
            get {
                return this.pIPHeightField;
            }
            set {
                this.pIPHeightField = value;
            }
        }
        
        /// <remarks/>
        public uint CompressionQuality {
            get {
                return this.compressionQualityField;
            }
            set {
                this.compressionQualityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class MediaProfiles {
        
        private MediaProfile[] profilesField;
        
        private TrickSpeed mediaTrickSpeedField;
        
        private bool processPIPField;
        
        /// <remarks/>
        public MediaProfile[] Profiles {
            get {
                return this.profilesField;
            }
            set {
                this.profilesField = value;
            }
        }
        
        /// <remarks/>
        public TrickSpeed MediaTrickSpeed {
            get {
                return this.mediaTrickSpeedField;
            }
            set {
                this.mediaTrickSpeedField = value;
            }
        }
        
        /// <remarks/>
        public bool ProcessPIP {
            get {
                return this.processPIPField;
            }
            set {
                this.processPIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class ConfigMetadata {
        
        private string metadataNameField;
        
        private bool requiredField;
        
        /// <remarks/>
        public string MetadataName {
            get {
                return this.metadataNameField;
            }
            set {
                this.metadataNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class RequiredMetadata {
        
        private bool rightsMetadataField;
        
        private ConfigMetadata[] rightsMetadataListField;
        
        private bool businessMetadataField;
        
        private ConfigMetadata[] businessMetadataListField;
        
        private bool featureMetadataField;
        
        private ConfigMetadata[] featureMetadataListField;
        
        private bool posterMetadataField;
        
        private ConfigMetadata[] posterMetadataListField;
        
        private bool trailerMetadataField;
        
        private ConfigMetadata[] trailerMetadataListField;
        
        private bool extraMetadataField;
        
        private ConfigMetadata[] extraMetadataListField;
        
        /// <remarks/>
        public bool RightsMetadata {
            get {
                return this.rightsMetadataField;
            }
            set {
                this.rightsMetadataField = value;
            }
        }
        
        /// <remarks/>
        public ConfigMetadata[] RightsMetadataList {
            get {
                return this.rightsMetadataListField;
            }
            set {
                this.rightsMetadataListField = value;
            }
        }
        
        /// <remarks/>
        public bool BusinessMetadata {
            get {
                return this.businessMetadataField;
            }
            set {
                this.businessMetadataField = value;
            }
        }
        
        /// <remarks/>
        public ConfigMetadata[] BusinessMetadataList {
            get {
                return this.businessMetadataListField;
            }
            set {
                this.businessMetadataListField = value;
            }
        }
        
        /// <remarks/>
        public bool FeatureMetadata {
            get {
                return this.featureMetadataField;
            }
            set {
                this.featureMetadataField = value;
            }
        }
        
        /// <remarks/>
        public ConfigMetadata[] FeatureMetadataList {
            get {
                return this.featureMetadataListField;
            }
            set {
                this.featureMetadataListField = value;
            }
        }
        
        /// <remarks/>
        public bool PosterMetadata {
            get {
                return this.posterMetadataField;
            }
            set {
                this.posterMetadataField = value;
            }
        }
        
        /// <remarks/>
        public ConfigMetadata[] PosterMetadataList {
            get {
                return this.posterMetadataListField;
            }
            set {
                this.posterMetadataListField = value;
            }
        }
        
        /// <remarks/>
        public bool TrailerMetadata {
            get {
                return this.trailerMetadataField;
            }
            set {
                this.trailerMetadataField = value;
            }
        }
        
        /// <remarks/>
        public ConfigMetadata[] TrailerMetadataList {
            get {
                return this.trailerMetadataListField;
            }
            set {
                this.trailerMetadataListField = value;
            }
        }
        
        /// <remarks/>
        public bool ExtraMetadata {
            get {
                return this.extraMetadataField;
            }
            set {
                this.extraMetadataField = value;
            }
        }
        
        /// <remarks/>
        public ConfigMetadata[] ExtraMetadataList {
            get {
                return this.extraMetadataListField;
            }
            set {
                this.extraMetadataListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class ImportConfiguration {
        
        private string assetLocationField;
        
        private uint pollingIntervalField;
        
        private uint deployRetryCountField;
        
        private uint deployRetryIntervalField;
        
        private uint mediaEncodersField;
        
        private uint expiredAssetsPollingIntervalField;
        
        /// <remarks/>
        public string AssetLocation {
            get {
                return this.assetLocationField;
            }
            set {
                this.assetLocationField = value;
            }
        }
        
        /// <remarks/>
        public uint PollingInterval {
            get {
                return this.pollingIntervalField;
            }
            set {
                this.pollingIntervalField = value;
            }
        }
        
        /// <remarks/>
        public uint DeployRetryCount {
            get {
                return this.deployRetryCountField;
            }
            set {
                this.deployRetryCountField = value;
            }
        }
        
        /// <remarks/>
        public uint DeployRetryInterval {
            get {
                return this.deployRetryIntervalField;
            }
            set {
                this.deployRetryIntervalField = value;
            }
        }
        
        /// <remarks/>
        public uint MediaEncoders {
            get {
                return this.mediaEncodersField;
            }
            set {
                this.mediaEncodersField = value;
            }
        }
        
        /// <remarks/>
        public uint ExpiredAssetsPollingInterval {
            get {
                return this.expiredAssetsPollingIntervalField;
            }
            set {
                this.expiredAssetsPollingIntervalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class AssetFileInfo {
        
        private string relativePathField;
        
        private string locationField;
        
        private long fileSizeField;
        
        private long fileBitrateField;
        
        private System.DateTime lastModifiedField;
        
        private MediaFileType assetMediaFileTypeField;
        
        /// <remarks/>
        public string RelativePath {
            get {
                return this.relativePathField;
            }
            set {
                this.relativePathField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public long FileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        public long FileBitrate {
            get {
                return this.fileBitrateField;
            }
            set {
                this.fileBitrateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        public MediaFileType AssetMediaFileType {
            get {
                return this.assetMediaFileTypeField;
            }
            set {
                this.assetMediaFileTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public enum MediaFileType {
        
        /// <remarks/>
        FEATURE,
        
        /// <remarks/>
        FEATURE_PIP,
        
        /// <remarks/>
        TRAILER,
        
        /// <remarks/>
        TRAILER_PIP,
        
        /// <remarks/>
        POSTER,
        
        /// <remarks/>
        METADATA,
        
        /// <remarks/>
        PROCESS_CONTENT,
        
        /// <remarks/>
        APPLICATION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class AssetMediaInfo {
        
        private long timestampField;
        
        private long metadataTimestampField;
        
        private string providerAssetIdField;
        
        private string providerIdField;
        
        private string assetNameField;
        
        private AssetFileInfo[] assetFilesField;
        
        /// <remarks/>
        public long Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public long MetadataTimestamp {
            get {
                return this.metadataTimestampField;
            }
            set {
                this.metadataTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderAssetId {
            get {
                return this.providerAssetIdField;
            }
            set {
                this.providerAssetIdField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
            }
        }
        
        /// <remarks/>
        public string AssetName {
            get {
                return this.assetNameField;
            }
            set {
                this.assetNameField = value;
            }
        }
        
        /// <remarks/>
        public AssetFileInfo[] AssetFiles {
            get {
                return this.assetFilesField;
            }
            set {
                this.assetFilesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class Key {
        
        private string keyIdField;
        
        private byte[] keyDataField;
        
        /// <remarks/>
        public string KeyId {
            get {
                return this.keyIdField;
            }
            set {
                this.keyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] KeyData {
            get {
                return this.keyDataField;
            }
            set {
                this.keyDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class ServiceKeyMap {
        
        private string serviceIdField;
        
        private Key[] keysField;
        
        /// <remarks/>
        public string ServiceId {
            get {
                return this.serviceIdField;
            }
            set {
                this.serviceIdField = value;
            }
        }
        
        /// <remarks/>
        public Key[] Keys {
            get {
                return this.keysField;
            }
            set {
                this.keysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class AssetKeyInfo {
        
        private string assetIDField;
        
        private string contentPathField;
        
        private ServiceKeyMap[] serviceKeyMapField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public string AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public string ContentPath {
            get {
                return this.contentPathField;
            }
            set {
                this.contentPathField = value;
            }
        }
        
        /// <remarks/>
        public ServiceKeyMap[] ServiceKeyMap {
            get {
                return this.serviceKeyMapField;
            }
            set {
                this.serviceKeyMapField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class DRMConfiguration {
        
        private bool protectFeatureField;
        
        private bool protectTrailerField;
        
        private uint keyPeriodField;
        
        private uint keyLengthField;
        
        private ulong maxSamplesPerCounterField;
        
        private uint minReadyKeysField;
        
        private byte[] certificateSubjectKeyIDField;
        
        private string macroVisionLevelField;
        
        private string cGMSALevelField;
        
        /// <remarks/>
        public bool ProtectFeature {
            get {
                return this.protectFeatureField;
            }
            set {
                this.protectFeatureField = value;
            }
        }
        
        /// <remarks/>
        public bool ProtectTrailer {
            get {
                return this.protectTrailerField;
            }
            set {
                this.protectTrailerField = value;
            }
        }
        
        /// <remarks/>
        public uint KeyPeriod {
            get {
                return this.keyPeriodField;
            }
            set {
                this.keyPeriodField = value;
            }
        }
        
        /// <remarks/>
        public uint KeyLength {
            get {
                return this.keyLengthField;
            }
            set {
                this.keyLengthField = value;
            }
        }
        
        /// <remarks/>
        public ulong MaxSamplesPerCounter {
            get {
                return this.maxSamplesPerCounterField;
            }
            set {
                this.maxSamplesPerCounterField = value;
            }
        }
        
        /// <remarks/>
        public uint MinReadyKeys {
            get {
                return this.minReadyKeysField;
            }
            set {
                this.minReadyKeysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary")]
        public byte[] CertificateSubjectKeyID {
            get {
                return this.certificateSubjectKeyIDField;
            }
            set {
                this.certificateSubjectKeyIDField = value;
            }
        }
        
        /// <remarks/>
        public string MacroVisionLevel {
            get {
                return this.macroVisionLevelField;
            }
            set {
                this.macroVisionLevelField = value;
            }
        }
        
        /// <remarks/>
        public string CGMSALevel {
            get {
                return this.cGMSALevelField;
            }
            set {
                this.cGMSALevelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class RuleChange {
        
        private RuleChangeType changeTypeField;
        
        private string fieldNameField;
        
        private RuleFieldType fieldTypeField;
        
        private string fieldPathField;
        
        private RuleChangeAction changeActionField;
        
        private string valueField;
        
        /// <remarks/>
        public RuleChangeType changeType {
            get {
                return this.changeTypeField;
            }
            set {
                this.changeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public RuleFieldType fieldType {
            get {
                return this.fieldTypeField;
            }
            set {
                this.fieldTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fieldPath {
            get {
                return this.fieldPathField;
            }
            set {
                this.fieldPathField = value;
            }
        }
        
        /// <remarks/>
        public RuleChangeAction changeAction {
            get {
                return this.changeActionField;
            }
            set {
                this.changeActionField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public enum RuleChangeType {
        
        /// <remarks/>
        ModifyField,
        
        /// <remarks/>
        DoNotImport,
        
        /// <remarks/>
        ThrowError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public enum RuleFieldType {
        
        /// <remarks/>
        Single,
        
        /// <remarks/>
        Multiple,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public enum RuleChangeAction {
        
        /// <remarks/>
        AddField,
        
        /// <remarks/>
        DeleteField,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class RuleCondition {
        
        private string fieldNameField;
        
        private RuleFieldType fieldTypeField;
        
        private string fieldPathField;
        
        private RuleConditionVerb verbField;
        
        private string valueField;
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public RuleFieldType fieldType {
            get {
                return this.fieldTypeField;
            }
            set {
                this.fieldTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fieldPath {
            get {
                return this.fieldPathField;
            }
            set {
                this.fieldPathField = value;
            }
        }
        
        /// <remarks/>
        public RuleConditionVerb verb {
            get {
                return this.verbField;
            }
            set {
                this.verbField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public enum RuleConditionVerb {
        
        /// <remarks/>
        Equals,
        
        /// <remarks/>
        NotEquals,
        
        /// <remarks/>
        GreaterThen,
        
        /// <remarks/>
        LessThen,
        
        /// <remarks/>
        IsDefined,
        
        /// <remarks/>
        IsNotDefined,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class RootRuleCondition {
        
        private RuleCondition[] ruleConditionsField;
        
        /// <remarks/>
        public RuleCondition[] ruleConditions {
            get {
                return this.ruleConditionsField;
            }
            set {
                this.ruleConditionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class ImportRuleDefinition {
        
        private System.Guid ruleIdField;
        
        private string ruleNameField;
        
        private RuleStatus ruleStatusField;
        
        private uint ruleOrderField;
        
        private uint ruleVersionField;
        
        private RootRuleCondition[] ruleConditionsField;
        
        private RuleChange[] ruleChangesField;
        
        /// <remarks/>
        public System.Guid ruleId {
            get {
                return this.ruleIdField;
            }
            set {
                this.ruleIdField = value;
            }
        }
        
        /// <remarks/>
        public string ruleName {
            get {
                return this.ruleNameField;
            }
            set {
                this.ruleNameField = value;
            }
        }
        
        /// <remarks/>
        public RuleStatus ruleStatus {
            get {
                return this.ruleStatusField;
            }
            set {
                this.ruleStatusField = value;
            }
        }
        
        /// <remarks/>
        public uint ruleOrder {
            get {
                return this.ruleOrderField;
            }
            set {
                this.ruleOrderField = value;
            }
        }
        
        /// <remarks/>
        public uint ruleVersion {
            get {
                return this.ruleVersionField;
            }
            set {
                this.ruleVersionField = value;
            }
        }
        
        /// <remarks/>
        public RootRuleCondition[] ruleConditions {
            get {
                return this.ruleConditionsField;
            }
            set {
                this.ruleConditionsField = value;
            }
        }
        
        /// <remarks/>
        public RuleChange[] ruleChanges {
            get {
                return this.ruleChangesField;
            }
            set {
                this.ruleChangesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public enum RuleStatus {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Inactive,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class RuleMove {
        
        private System.Guid ruleIdField;
        
        private uint ruleOrderField;
        
        private uint ruleVersionField;
        
        /// <remarks/>
        public System.Guid ruleId {
            get {
                return this.ruleIdField;
            }
            set {
                this.ruleIdField = value;
            }
        }
        
        /// <remarks/>
        public uint ruleOrder {
            get {
                return this.ruleOrderField;
            }
            set {
                this.ruleOrderField = value;
            }
        }
        
        /// <remarks/>
        public uint ruleVersion {
            get {
                return this.ruleVersionField;
            }
            set {
                this.ruleVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class ValidationCategory {
        
        private System.Xml.XmlNode categoryElementsField;
        
        private int categoryVersionField;
        
        /// <remarks/>
        public System.Xml.XmlNode CategoryElements {
            get {
                return this.categoryElementsField;
            }
            set {
                this.categoryElementsField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryVersion {
            get {
                return this.categoryVersionField;
            }
            set {
                this.categoryVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class SubscriberGroup {
        
        private System.Guid groupIDField;
        
        private string groupNameField;
        
        private string errorMessageField;
        
        private System.DateTime modifiedDateTimeField;
        
        private DeployStatus statusField;
        
        /// <remarks/>
        public System.Guid GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public DeployStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public enum DeployStatus {
        
        /// <remarks/>
        Deploy,
        
        /// <remarks/>
        Progressing,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Succeeded,
        
        /// <remarks/>
        DeployMetadataOnly,
        
        /// <remarks/>
        DeployMediaOnly,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeployInformationEx))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class DeployInformation {
        
        private long assetTimestampField;
        
        private float assetVersionField;
        
        private int priorityField;
        
        private AssetFlag autoDeployField;
        
        private AssetFlag autoDeleteField;
        
        private SubscriberGroup[] subscriberGroupsField;
        
        private string assetIDField;
        
        private string backendNameField;
        
        private string providerIDField;
        
        private string assetNameField;
        
        private string sourcePathField;
        
        private System.DateTime lastModifiedDateField;
        
        /// <remarks/>
        public long AssetTimestamp {
            get {
                return this.assetTimestampField;
            }
            set {
                this.assetTimestampField = value;
            }
        }
        
        /// <remarks/>
        public float AssetVersion {
            get {
                return this.assetVersionField;
            }
            set {
                this.assetVersionField = value;
            }
        }
        
        /// <remarks/>
        public int Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public AssetFlag AutoDeploy {
            get {
                return this.autoDeployField;
            }
            set {
                this.autoDeployField = value;
            }
        }
        
        /// <remarks/>
        public AssetFlag AutoDelete {
            get {
                return this.autoDeleteField;
            }
            set {
                this.autoDeleteField = value;
            }
        }
        
        /// <remarks/>
        public SubscriberGroup[] SubscriberGroups {
            get {
                return this.subscriberGroupsField;
            }
            set {
                this.subscriberGroupsField = value;
            }
        }
        
        /// <remarks/>
        public string AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public string BackendName {
            get {
                return this.backendNameField;
            }
            set {
                this.backendNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string AssetName {
            get {
                return this.assetNameField;
            }
            set {
                this.assetNameField = value;
            }
        }
        
        /// <remarks/>
        public string SourcePath {
            get {
                return this.sourcePathField;
            }
            set {
                this.sourcePathField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModifiedDate {
            get {
                return this.lastModifiedDateField;
            }
            set {
                this.lastModifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public enum AssetFlag {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Enabled,
        
        /// <remarks/>
        Disabled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class DeployInformationEx : DeployInformation {
        
        private string assetTypeField;
        
        private AssetContentMask assetMaskField;
        
        /// <remarks/>
        public string AssetType {
            get {
                return this.assetTypeField;
            }
            set {
                this.assetTypeField = value;
            }
        }
        
        /// <remarks/>
        public AssetContentMask AssetMask {
            get {
                return this.assetMaskField;
            }
            set {
                this.assetMaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public enum AssetContentMask {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        Unknown = 2,
        
        /// <remarks/>
        Metadata = 4,
        
        /// <remarks/>
        Poster = 8,
        
        /// <remarks/>
        Trailer = 16,
        
        /// <remarks/>
        Feature = 32,
        
        /// <remarks/>
        Manifest = 64,
        
        /// <remarks/>
        MBR = 128,
        
        /// <remarks/>
        External = 256,
        
        /// <remarks/>
        MBRManifest = 512,
        
        /// <remarks/>
        MBRTrailer = 1024,
        
        /// <remarks/>
        MBRFeature = 2048,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public partial class StatusInformation {
        
        private string assetIDField;
        
        private string providerIDField;
        
        private string assetNameField;
        
        private string providerNameField;
        
        private string ratingField;
        
        private string sourcePathField;
        
        private string destinationPathField;
        
        private string destinationURLField;
        
        private AssetStatus statusField;
        
        private string errorMessageField;
        
        private System.DateTime modifiedDateTimeField;
        
        private System.DateTime licensingWindowStartField;
        
        private System.DateTime licensingWindowEndField;
        
        private long timestampField;
        
        private long metadataTimestampField;
        
        private bool isImportableField;
        
        private AssetFlag autoImportField;
        
        private AssetFlag autoDeployField;
        
        private AssetFlag autoDeleteField;
        
        private int priorityField;
        
        private float versionField;
        
        private string vODTypeField;
        
        private string vODProductField;
        
        private System.DateTime metadataModTimeField;
        
        private System.DateTime metadataAccessTimeField;
        
        /// <remarks/>
        public string AssetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string AssetName {
            get {
                return this.assetNameField;
            }
            set {
                this.assetNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderName {
            get {
                return this.providerNameField;
            }
            set {
                this.providerNameField = value;
            }
        }
        
        /// <remarks/>
        public string Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        public string SourcePath {
            get {
                return this.sourcePathField;
            }
            set {
                this.sourcePathField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationPath {
            get {
                return this.destinationPathField;
            }
            set {
                this.destinationPathField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationURL {
            get {
                return this.destinationURLField;
            }
            set {
                this.destinationURLField = value;
            }
        }
        
        /// <remarks/>
        public AssetStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LicensingWindowStart {
            get {
                return this.licensingWindowStartField;
            }
            set {
                this.licensingWindowStartField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LicensingWindowEnd {
            get {
                return this.licensingWindowEndField;
            }
            set {
                this.licensingWindowEndField = value;
            }
        }
        
        /// <remarks/>
        public long Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public long MetadataTimestamp {
            get {
                return this.metadataTimestampField;
            }
            set {
                this.metadataTimestampField = value;
            }
        }
        
        /// <remarks/>
        public bool IsImportable {
            get {
                return this.isImportableField;
            }
            set {
                this.isImportableField = value;
            }
        }
        
        /// <remarks/>
        public AssetFlag AutoImport {
            get {
                return this.autoImportField;
            }
            set {
                this.autoImportField = value;
            }
        }
        
        /// <remarks/>
        public AssetFlag AutoDeploy {
            get {
                return this.autoDeployField;
            }
            set {
                this.autoDeployField = value;
            }
        }
        
        /// <remarks/>
        public AssetFlag AutoDelete {
            get {
                return this.autoDeleteField;
            }
            set {
                this.autoDeleteField = value;
            }
        }
        
        /// <remarks/>
        public int Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public float Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string VODType {
            get {
                return this.vODTypeField;
            }
            set {
                this.vODTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VODProduct {
            get {
                return this.vODProductField;
            }
            set {
                this.vODProductField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MetadataModTime {
            get {
                return this.metadataModTimeField;
            }
            set {
                this.metadataModTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MetadataAccessTime {
            get {
                return this.metadataAccessTimeField;
            }
            set {
                this.metadataAccessTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/tv2/server/vod")]
    public enum AssetStatus {
        
        /// <remarks/>
        Import,
        
        /// <remarks/>
        Progressing,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Succeeded,
        
        /// <remarks/>
        Ready,
        
        /// <remarks/>
        Incomplete,
        
        /// <remarks/>
        ReImportAll,
        
        /// <remarks/>
        ReImportMetadata,
        
        /// <remarks/>
        ReImportMedia,
        
        /// <remarks/>
        AutoImportMetadata,
        
        /// <remarks/>
        AutoImportAll,
        
        /// <remarks/>
        ReimportingMetadata,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Microsoft.TV2.Oss")]
    public partial class VodResponse {
        
        private string errorMessageField;
        
        private bool statusField;
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetDataSourceRegistrationInfoCompletedEventHandler(object sender, GetDataSourceRegistrationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataSourceRegistrationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataSourceRegistrationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSourceRegistrationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSourceRegistrationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RegisterHeadendCompletedEventHandler(object sender, RegisterHeadendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterHeadendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterHeadendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UnregisterHeadendCompletedEventHandler(object sender, UnregisterHeadendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnregisterHeadendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnregisterHeadendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetBackendAssetStatusCompletedEventHandler(object sender, GetBackendAssetStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBackendAssetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBackendAssetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInformation[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long nextIndex {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetDeployableBackendAssetsCompletedEventHandler(object sender, GetDeployableBackendAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeployableBackendAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeployableBackendAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeployInformationEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeployInformationEx[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long nextIndex {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ReadAutoDeployableAssetsCompletedEventHandler(object sender, ReadAutoDeployableAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadAutoDeployableAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadAutoDeployableAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeployInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeployInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ReadAutoDeployableAssetsV2CompletedEventHandler(object sender, ReadAutoDeployableAssetsV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadAutoDeployableAssetsV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadAutoDeployableAssetsV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeployInformationEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeployInformationEx[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ReadAssetsMarkedForDeletionCompletedEventHandler(object sender, ReadAssetsMarkedForDeletionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadAssetsMarkedForDeletionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadAssetsMarkedForDeletionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeployInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeployInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetDeployableBackendAssetsLikeAssetNameCompletedEventHandler(object sender, GetDeployableBackendAssetsLikeAssetNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeployableBackendAssetsLikeAssetNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeployableBackendAssetsLikeAssetNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeployInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeployInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetDeployableBackendAssetsLikeAssetIDCompletedEventHandler(object sender, GetDeployableBackendAssetsLikeAssetIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeployableBackendAssetsLikeAssetIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeployableBackendAssetsLikeAssetIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeployInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeployInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetDeployableBackendAssetsLikeProviderIDCompletedEventHandler(object sender, GetDeployableBackendAssetsLikeProviderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeployableBackendAssetsLikeProviderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeployableBackendAssetsLikeProviderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeployInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeployInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SetValidationCategoriesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetValidationCategoriesCompletedEventHandler(object sender, GetValidationCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidationCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidationCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ValidationCategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ValidationCategory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteImportRuleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MoveImportRulesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SaveImportRuleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetImportRuleCompletedEventHandler(object sender, GetImportRuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImportRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImportRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImportRuleDefinition Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImportRuleDefinition)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetCurrentImportRulesCompletedEventHandler(object sender, GetCurrentImportRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentImportRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentImportRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImportRuleDefinition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImportRuleDefinition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IngestAssetCompletedEventHandler(object sender, IngestAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IngestAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IngestAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ImportAssetsCompletedEventHandler(object sender, ImportAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ReimportAllCompletedEventHandler(object sender, ReimportAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReimportAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReimportAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ReimportMetadataCompletedEventHandler(object sender, ReimportMetadataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReimportMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReimportMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetImportStatusInformationByIdCompletedEventHandler(object sender, GetImportStatusInformationByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImportStatusInformationByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImportStatusInformationByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IsVODCreatorStationReadyCompletedEventHandler(object sender, IsVODCreatorStationReadyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsVODCreatorStationReadyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsVODCreatorStationReadyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetAssetMetadataFromBackendCompletedEventHandler(object sender, GetAssetMetadataFromBackendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssetMetadataFromBackendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssetMetadataFromBackendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SaveAssetMetadataInBackendCompletedEventHandler(object sender, SaveAssetMetadataInBackendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAssetMetadataInBackendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAssetMetadataInBackendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteAssetFromBackendCompletedEventHandler(object sender, DeleteAssetFromBackendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAssetFromBackendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAssetFromBackendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteAssetFromBackendAndBranchCompletedEventHandler(object sender, DeleteAssetFromBackendAndBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAssetFromBackendAndBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAssetFromBackendAndBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RemoveAssetCompletedEventHandler(object sender, RemoveAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ReadDRMConfigurationCompletedEventHandler(object sender, ReadDRMConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadDRMConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadDRMConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DRMConfiguration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DRMConfiguration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UpdateDRMConfigurationCompletedEventHandler(object sender, UpdateDRMConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDRMConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDRMConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetAssetKeyInfoCompletedEventHandler(object sender, GetAssetKeyInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssetKeyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssetKeyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetKeyInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetKeyInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetAssetMediaInfoCompletedEventHandler(object sender, GetAssetMediaInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssetMediaInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssetMediaInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetMediaInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetMediaInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetServiceConfigurationCompletedEventHandler(object sender, GetServiceConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImportConfiguration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImportConfiguration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SetServiceConfigurationCompletedEventHandler(object sender, SetServiceConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetServiceConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetServiceConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetValidationRulesCompletedEventHandler(object sender, GetValidationRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidationRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidationRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RequiredMetadata Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RequiredMetadata)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SetValidationRulesCompletedEventHandler(object sender, SetValidationRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetValidationRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetValidationRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetMediaProfilesCompletedEventHandler(object sender, GetMediaProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaProfiles Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaProfiles)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SetMediaProfilesCompletedEventHandler(object sender, SetMediaProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMediaProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMediaProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VodResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VodResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetPreImportConfigurationCompletedEventHandler(object sender, GetPreImportConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreImportConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreImportConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BackendPreImportConfiguration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BackendPreImportConfiguration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SetPreImportConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetImportConfigurationCompletedEventHandler(object sender, GetImportConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImportConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImportConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BackendImportConfiguration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BackendImportConfiguration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SetImportConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetOtherConfigurationCompletedEventHandler(object sender, GetOtherConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOtherConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOtherConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BackendOtherConfiguration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BackendOtherConfiguration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SetOtherConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetValidationConfigurationCompletedEventHandler(object sender, GetValidationConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidationConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidationConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ValidationConfiguration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ValidationConfiguration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SetValidationConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetConfigurationCompletedEventHandler(object sender, GetConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConfigurationNameValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConfigurationNameValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddUpdateConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetImportStatusInformationCompletedEventHandler(object sender, GetImportStatusInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImportStatusInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImportStatusInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetImportableAssetInformationCompletedEventHandler(object sender, GetImportableAssetInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImportableAssetInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImportableAssetInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetAssetStatusSortedCompletedEventHandler(object sender, GetAssetStatusSortedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssetStatusSortedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssetStatusSortedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetDeployableAssetsCompletedEventHandler(object sender, GetDeployableAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeployableAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeployableAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeployInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeployInformation[])(this.results[0]));
            }
        }
    }
}
